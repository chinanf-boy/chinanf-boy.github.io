<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code &gt; Explain &gt; Transalte 的人</title>
    <link>/</link>
    <description>Recent content on Code &gt; Explain &gt; Transalte 的人</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 01 Apr 2021 22:22:51 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust周报 384(译)</title>
      <link>/2021/04/01/rust%E5%91%A8%E6%8A%A5-384%E8%AF%91/</link>
      <pubDate>Thu, 01 Apr 2021 22:22:51 +0800</pubDate>
      
      <guid>/2021/04/01/rust%E5%91%A8%E6%8A%A5-384%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-03-31 原文：384 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  Announcing Rust 1.51.0 [Foundation] introducing mark rousskov [Foundation] introducing nell shamrell-harrington  Project/Tooling Updates  rust-analyzer changelog #70 IntelliJ Rust Changelog #144 Knurling-rs Financial Update and Call for Funding Ockam | End-to-end encrypted messaging and mutual authentication between distributed applications Announcing the Deno Company  Observations/Thoughts  Using Rust 极致腐蚀 Python run-times The current state of Rust web frameworks GhostCell: Separating Permissions from Data in Rust Using const generics in slipstream Rust iterators tips and tricks  Rust Walkthroughs  Pin and suffering 将 Rust 嵌入进 Zephyr Firmware using C-bindgen Parser combinators in Rust Grids in Rust, part 2: const generics Ergonomic error handling with Rust Implementing SHA2 (256&amp;frasl;512) algorithm with Rust const generics 使用 GNU 调试器分析 Rust 中的内存分配 Testing an embedded application Using Const Generics To Model An Electronics Graph Rust&amp;rsquo;s Module System Explained [series] working with the trust-dns-resolver crate  Papers and Research Projects  [Video] safer rust: program verification with creusot  Miscellaneous  Linus Torvalds weighs in on Rust language in the Linux kernel Ownership Concept Diagram  Crate of the Week 这周的箱子是tide-acme，一个使用“Let&amp;rsquo;s Encrypt for Tide”，自动 HTTPS 认证的箱子。</description>
    </item>
    
    <item>
      <title>Rust周报 383(译)</title>
      <link>/2021/03/28/rust%E5%91%A8%E6%8A%A5-383%E8%AF%91/</link>
      <pubDate>Sun, 28 Mar 2021 10:45:47 +0800</pubDate>
      
      <guid>/2021/03/28/rust%E5%91%A8%E6%8A%A5-383%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-03-24 原文：383 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  Building a shared vision for Async Rust [Inside] 1.51.0 pre-release testing [Foundation] introducing bobby holley [Foundation] introducing tyler mandry  Newsletters Project/Tooling Updates  rust-analyzer Changelog #69  Observations/Thoughts  Rust&amp;rsquo;s 可持续性的最大威胁 Safe Systems Programming in Rust The GPIO war（对抗借用检查者）: macro bunkers for typestate explosions A look back at asynchronous Rust Rust as an App Language How often does Rust change?</description>
    </item>
    
    <item>
      <title>Rust周报 382(译)</title>
      <link>/2021/03/21/rust%E5%91%A8%E6%8A%A5-382%E8%AF%91/</link>
      <pubDate>Sun, 21 Mar 2021 15:15:37 +0800</pubDate>
      
      <guid>/2021/03/21/rust%E5%91%A8%E6%8A%A5-382%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-03-17 原文：382 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official 本周没有官方博客文章
Newsletters 本周没有新闻通讯
Project/Tooling Updates  MiniWASM - Rust WebAssembly 项目模板极简版 Stepper 0.5 (formerly Step/Dir) - Universal Stepper Motor Interface Rust Analyzer Changelog #68 IntelliJ Rust Changelog #143  Observations/Thoughts  Starship —— Rust 写成的 shell prompt (项目创建者采访) Rust vs. Go: 一起会更强 Cranelift, Part 3: Correctness in Register Allocation Making Great Docs with Rustdoc Writing a Postgres SQL Pretty Printer in Rust: Part 1 Data Manipulation: Polars vs Rust  Rust Walkthroughs  OS in Rust: Incorporate VGA buffer: Part-7 Rust Koans（启蒙） How to send emails with Rust Writing Pong in Rust for my OS Arenas in Rust 永不下线的部署 Deploy A Rust Website on Heroku One enum to rule them all Writing a 3D Shooter using rg3d - #3 - Bots, AI Developing High Performance Apache Cassandra™ Applications in Rust (Part 1) Strings in Rust Rust - Reqwest examples libp2p tutorial: Build a peer-to-peer app in Rust [video] rust for beginners - watch me code the rustlings tutorial [video] crust of rust: the drop check (live edition)  Papers and Research Projects *本周没有论文和研究项目</description>
    </item>
    
    <item>
      <title>Rust周报 381(译)</title>
      <link>/2021/03/12/rust%E5%91%A8%E6%8A%A5-381%E8%AF%91/</link>
      <pubDate>Fri, 12 Mar 2021 23:15:26 +0800</pubDate>
      
      <guid>/2021/03/12/rust%E5%91%A8%E6%8A%A5-381%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-03-10 原文：381 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  Planning the Rust 2021 Edition  Newsletters  This Month in Rust GameDev #19 - February 2021 This Month in Rust OSDev (February 2021) RiB Newsletter #21 - More Rust and blockchains  Project/Tooling Updates  rust-analyzer Changelog #67 rust-gpu v0.3 cargo-generate 0.6.0 Automatically generate APIs for datasets using Rust, Arrow and Datafusion  Observations/Thoughts  Serverless Rust Testing Rust&amp;rsquo;s Type System is Turing（图灵）-Complete Why I rewrote my Rust keyboard firmware in Zig: consistency（合理性）, mastery（精通）, and fun Calling a private Rust function from outside of its module Safe, Flexible Aliasing with Deferred Borrows Evaluating Memory Models for Graph-Like Data Structures in the Rust Programming Language: Performance and Usability Rusts Universes Giganotes 应用的强力助推 Rust  Rust Walkthroughs  OS in Rust: Incorporate VGA buffer: Part-6 Writing a 3D Shooter using rg3d - #1 - Character Controller Writing a 3D Shooter using rg3d - #2 - Weapons Writing Pong in Rust for my OS Written in Rust Replacing FastAPI with Rust: Part 6 - AWS Lambda Creating an Iterator in Rust Building an OpenStreetMap app in Rust, Part V [video] learning rust: structs and traits [video] answers to stackoverflow&amp;rsquo;s top rust programming questions explained [video] (live coding) learning timely dataflow [FA] [video] Rust in Farsi ツ  Papers and Research Projects  Creusot is a tool for deductive verification of Rust code egg, a Rust library ，以电子图的角度，观察等式的不同写法  Miscellaneous  Debian running on Rust coreutils A friend and I made pipes-rs, a Rust clone of pipes.</description>
    </item>
    
    <item>
      <title>Rust周报 380(译)</title>
      <link>/2021/03/04/rust%E5%91%A8%E6%8A%A5-380%E8%AF%91/</link>
      <pubDate>Thu, 04 Mar 2021 21:10:35 +0800</pubDate>
      
      <guid>/2021/03/04/rust%E5%91%A8%E6%8A%A5-380%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-03-03 原文：380 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  Const generics MVP hits beta! [Inside] lang team march update  Project/Tooling Updates  IntelliJ Rust Changelog #142 rust-analyzer changelog #66 Knurling-rs changelog #18 Last Month in Flott - March 2021 RampMaker 0.2 - Stepper Motor Acceleration Ramp Generator  Observations/Thoughts  Why we built the core auth library in Rust (interview with CTO of Oso) Data Manipulation: Pandas vs Rust 快速 Rust Evolution of Kube Temporal RDO（失真率优化）update optimization Introducing The Calypso Chronicles（自写小语言） Rust: Beware of Escape Sequences\n Introducing Rustybot (part 3 of n) Delete Cargo Integration Tests  Rust Walkthroughs  C++ to Rust - or how to render your mindset Generic impl blocks are kinda like macros&amp;hellip; Make a Back-End Number Guessing Game with Rust Captures in closures and async blocks Testing a driver crate Using Rust for AWS Lambdas Always-On Benchmarking in Rust Building an OpenStreetMap app in Rust, Part IV Solving Advent of Code 2020 in under a second The Case for the Typestate Pattern - Introducing Algebraic Data Types [DE] weniger frust mit rust [video] learning rust: procedural macros [video] rust proxy server with warp and hyper  Miscellaneous  Ferrocene Part 3: The Road to Rust in mission- and safety-critical How our AWS Rust team will contribute to Rust&amp;rsquo;s future successes Librsvg, Rust, and non-mainstream architectures Always-On Benchmarking In Rust [DE] weniger frust mit rust  Crate of the Week 这周的箱子是camino，具有 UTF-8 编码路径的库，模仿std::os::Path的 API。</description>
    </item>
    
    <item>
      <title>Rust周报 379(译)</title>
      <link>/2021/03/04/rust%E5%91%A8%E6%8A%A5-379%E8%AF%91/</link>
      <pubDate>Thu, 04 Mar 2021 21:09:22 +0800</pubDate>
      
      <guid>/2021/03/04/rust%E5%91%A8%E6%8A%A5-379%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-02-24 原文：379 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有时事通讯或官方博客。
Project/Tooling Updates  MoonZoon - New Rust fullstack framework rust-analyzer Changelog #65 Knurling-rs changelog #17  Observations/Thoughts  Rust for web development: 2 years later Integrating Rust and C++ in Firefox Building a telnet chat server with Rust and Lunatic 我反对，Packaging Rust Crates Why building a front-end framework in Rust is hard Oxidizing Kraken Maybe We Can Have Nice Things Three Things I Miss About Rust Storages: an alternative to allocators  Rust Walkthroughs  Rust ownership, the hard way Handling Unix Kill Signals in Rust Replacing FastAPI with Rust: Part 5 - Rocket 0.</description>
    </item>
    
    <item>
      <title>Rust周报 378(译)</title>
      <link>/2021/02/21/rust%E5%91%A8%E6%8A%A5-378%E8%AF%91/</link>
      <pubDate>Sun, 21 Feb 2021 00:10:21 +0800</pubDate>
      
      <guid>/2021/02/21/rust%E5%91%A8%E6%8A%A5-378%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-02-17 原文：378 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  Announcing Rust 1.50.0  Project/Tooling Updates  IntelliJ Rust changelog #141 rust-analyzer changelog #64 A big release for relm  Observations/Thoughts  The XDG 基础目录规范 and Rust Zero dependency images (of chaos) in Rust Examples of declarative style in Rust Rust 2030 Christmas list: Better cfg For the Love of Macros The Tokio Upgrade from 0.</description>
    </item>
    
    <item>
      <title>Rust周报 377(译)</title>
      <link>/2021/02/13/rust%E5%91%A8%E6%8A%A5-377%E8%AF%91/</link>
      <pubDate>Sat, 13 Feb 2021 09:09:52 +0800</pubDate>
      
      <guid>/2021/02/13/rust%E5%91%A8%E6%8A%A5-377%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-02-10 原文：377 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [Foundation] hello world! [Inside] 1.50.0 pre-release testing  Newsletters  This Month in Rust GameDev #18 - January 2021 This Month in Rust OSDev (January 2021)  Project/Tooling Updates  rust-analyzer Changelog #63 Launching wasm.rs: a collection of crates, a community A Memory Safe TLS Module for the Apache HTTP Server  Observations/Thoughts  对 Tokio Tasks 和 Goroutines 进行基准测试 A Better Rust 分析器 An unsafe tour of Rust&amp;rsquo;s Send and Sync Improving texture atlas allocation（纹理图分配） in WebRender  Rust Walkthroughs  Async Rust: Futures, Tasks, Wakers; Oh My!</description>
    </item>
    
    <item>
      <title>Rust周报 376(译)</title>
      <link>/2021/02/04/rust%E5%91%A8%E6%8A%A5-376%E8%AF%91/</link>
      <pubDate>Thu, 04 Feb 2021 16:01:35 +0800</pubDate>
      
      <guid>/2021/02/04/rust%E5%91%A8%E6%8A%A5-376%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-02-03 原文：376 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有官方博客文章。
Newsletters  RiB Newsletter #20 - Old fashioned chill  Project/Tooling Updates  rust-analyzer Changelog #62 IntelliJ Rust Changelog #140 Llama Rust SDK preview 0.1.3 Gfx-rs Release of v0.7 Open-sourcing Datanymizer: in-flight template-driven data anonymization（测试数据的匿名工具） Announcing Step/Dir - Universal Stepper Motor Interface（步进电机接口） Announcing RampMaker - Stepper Motor Acceleration Ramp Generator（配置工具） Krustlet v0.6.0  Observations/Thoughts  Is Rust a Functional Programming Language?</description>
    </item>
    
    <item>
      <title>Rust周报 375(译)</title>
      <link>/2021/01/30/rust%E5%91%A8%E6%8A%A5-375%E8%AF%91/</link>
      <pubDate>Sat, 30 Jan 2021 00:04:59 +0800</pubDate>
      
      <guid>/2021/01/30/rust%E5%91%A8%E6%8A%A5-375%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-01-27 原文：375 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [Inside] Rust &amp;amp; the case of the disappearing stack frames  Newsletters Project/Tooling Updates  rust-analyzer Changelog #61 性能提速 on front-end generated by rustdoc Criterion.rs v0.3.4 and Iai 0.1.0 The RustyHermit Unikernel（强化型单核系统） Introducing usb-ids.rs ⚡️ Dotenv-linter v3.0.0: Overview 🦀 🧮 An Auto-Increment Crate for Rust  Observations/Thoughts  移植一个 serverless 聊天机器人 from Python to Rust Unsafe Rust: How and when (not) to use it Rust and Go department directories 介绍 real-world 数据 with Rust: 介绍 the alias_all attribute in Serde  Rust Walkthroughs  Wrapping Errors in Rust Implementing Raft&amp;rsquo;s Leader Election（共识算法）in Rust 2048 WASM Implementing an LRU Cache in Rust JSON input validation in Warp Make A Language - Part Nineteen: Code Representations Make A Language - Part Twenty: Testing How to optimise compilation times with Rust Criterion 基准测试：Automatic flamegraphs First time using Yew: A Go game board in just a few lines of Rust.</description>
    </item>
    
    <item>
      <title>Rust周报 374(译)</title>
      <link>/2021/01/23/rust%E5%91%A8%E6%8A%A5-374%E8%AF%91/</link>
      <pubDate>Sat, 23 Jan 2021 00:25:28 +0800</pubDate>
      
      <guid>/2021/01/23/rust%E5%91%A8%E6%8A%A5-374%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-01-20 原文：374 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [Inside] rustdoc performance improvements [Inside] changes to the rustdoc team  Newsletters  This Month in Rust GameDev #17 - December 2020  Project/Tooling Updates  IntelliJ Rust Changelog #139 rust-analyzer Changelog #60 Knurling-rs Changelog #13 This week in Ballista #1 Deno in 2020 async-std v1.9.0 [video] penrose 0.2.0 overview  Observations/Thoughts  Cryptoxide perf (SHA2 / Blake2) About variadics in Rust(元组的泛型) Rust in Production: 1Password Unconditional loops are unconditionally awesome Rust is a hard way to make a web API Writing a better Line Iterator in Rust 实现跨进程 Sanakirja locks future::join and const-eval 来啦来啦，我的使用感受：I used Rust in production for 6 months!</description>
    </item>
    
    <item>
      <title>Rust周报 373(译)</title>
      <link>/2021/01/17/rust%E5%91%A8%E6%8A%A5-373%E8%AF%91/</link>
      <pubDate>Sun, 17 Jan 2021 12:19:15 +0800</pubDate>
      
      <guid>/2021/01/17/rust%E5%91%A8%E6%8A%A5-373%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-01-13 原文：373 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official Newsletters  This Month in Rust GameDev #17 - December 2020 This Month in Rust OSDev (December 2020)  Project/Tooling Updates  rust-analyzer Changelog #59 Knurling-rs Changelog #12 GCC Rust – How it can be achieved Open Source Security, Inc. Announces Funding of GCC Front-End for Rust Progress report on rustc_codegen_cranelift (Dec 2020)  Observations/Thoughts  XML parsing in Rust 8 倍速，parsing baseball files in Rust instead of Python!</description>
    </item>
    
    <item>
      <title>Rust周报 372(译)</title>
      <link>/2021/01/09/rust%E5%91%A8%E6%8A%A5-372%E8%AF%91/</link>
      <pubDate>Sat, 09 Jan 2021 01:04:14 +0800</pubDate>
      
      <guid>/2021/01/09/rust%E5%91%A8%E6%8A%A5-372%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2021-01-06 原文：372 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  Announcing Rust 1.49.0 mdBook security advisory  Newsletters  RiB Newsletter #19 - Rust and smart contracts  Project/Tooling Updates  Rust Analyzer Changelog #58 Rust Search Extension Changelog v1.1 Rust Design Patterns 成书啦 Pijul - How to survive? RustFFT 5.0 has been released! napi 1.0 released Insta 有了一个新的网站和文档 和一个 Visual Studio Code Extension Isahc 1.</description>
    </item>
    
    <item>
      <title>Rust周报 371(译)</title>
      <link>/2021/01/02/rust%E5%91%A8%E6%8A%A5-371%E8%AF%91/</link>
      <pubDate>Sat, 02 Jan 2021 13:08:01 +0800</pubDate>
      
      <guid>/2021/01/02/rust%E5%91%A8%E6%8A%A5-371%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-12-30 原文：371 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  [Inside] 欢迎 cjgillot and nadrieril to compiler-contributors [Inside] 1.49.0 pre-release testing  Project/Tooling Updates  IntelliJ Rust Changelog #138 Rust Analyzer Changelog #57 Redox OS 0.6.0  Observations/Thoughts  Call Site Dependency 注射情况 瞧瞧 tokio 1.0 API Changes Memory-Safety Challenge Considered Solved? An In-Depth Study with All Rust CVEs（通用漏洞披露） 45,000+ lines of Rust code later: An update on the 记录 &amp;amp; 调试工具 (rd) Cloning A Reference and Method Call Syntax in Rust 可以运行的 PNGs Why mongodump is fast  Rust Walkthroughs  Concurrency in modern programming languages: Rust Building distributed GraphQL backend using Rust and Apollo Federation 提高代码质量 using matches macro!</description>
    </item>
    
    <item>
      <title>Rust周报 370(译)</title>
      <link>/2020/12/27/rust%E5%91%A8%E6%8A%A5-370%E8%AF%91/</link>
      <pubDate>Sun, 27 Dec 2020 00:15:43 +0800</pubDate>
      
      <guid>/2020/12/27/rust%E5%91%A8%E6%8A%A5-370%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-12-23 原文：370 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有官方博客文章或新闻通讯。
Project/Tooling Updates  Rust Analyzer Changelog #56 Knurling-rs Changelog #11 Bevy 0.4 Announcing Tokio 1.0 hyper 0.14 RustFFT 5.0.0.experimental-1: Now faster than FFTW! Allsorts Font Shaping Engine Year in Review  Observations/Thoughts  Looking back on 2020 I rewrote a Clojure tool in Rust 🦀 Rust Reviewed: 是合理的炒作吗? 🦀 Three things I wish I&amp;rsquo;d known learning Rust Rust in a KDE Project First 3 Months of Rust How rust changed and saved my life Rust 后端应用的构建问题 in 2020 接触 (当前的) Rust 类型系统上的限制 with asynchronous programming [音频] Rust Gamedev Podcast - interview with fedor logachev  Rust Walkthroughs  Build your own async primitive Make A Language - Part Sixteen: Refactoring Make A Language - Part Seventeen: Crates Make A Language - Part Eighteen: Errors 一个简单的神经网络 (&amp;lt;200LoC, Rust) Rocket Tutorial 05: 强制邮件的唯一性 终端复用器 with Rust, Async, and Actors - Part 2 Learning Rust: static trait bounds Async: What is blocking?</description>
    </item>
    
    <item>
      <title>Rust周报 369(译)</title>
      <link>/2020/12/19/rust%E5%91%A8%E6%8A%A5-369%E8%AF%91/</link>
      <pubDate>Sat, 19 Dec 2020 23:06:54 +0800</pubDate>
      
      <guid>/2020/12/19/rust%E5%91%A8%E6%8A%A5-369%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-12-16 原文：369 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  关于 non-poisoning Mutex 和 RwLock 实现的调查 Foundation Conversation 下一站 Rust Survey 2020 Results [内部] changes to rust compiler team  Newsletters  This Month in Rust OSDev (November 2020)  Tooling  IntelliJ Rust Changelog #137 Rust Analyzer Changelog #55 Knurling-rs Changelog #10 These Months in explaine.rs Cargo2nix 0.9.0 release notes  Observations/Thoughts  FFI-Safe 多态性: Thin Trait Objects Adding BPF target support to the Rust compiler Why Rust 有一个美好未来 in the Cloud Closures: Magic Functions Notes on cross-compiling Rust Polymorphism in Rust: Enums vs Traits Beyond R and Python: Rust for Science Pointers 是复杂的 II, 或者说: 我们需要更好的语言规范 Serde tricks: 来自重构 rspotify 的学习经验 Notes On Lock Poisoning 我在尽我之能，尝试写出最快的排序算法&amp;hellip; in Rust Still Rusting - One Year Later 6 大原则：构建健全，灵活的共享数据 Apps with Rust &amp;amp; MongoDB [视频] The Unsafe Chronicles: Exhibit A: Aliasing Boxes  Rust Walkthroughs  Make A Language - Part Fourteen: Comments Make A Language - Part Fifteen: Markers Rust, Python and Fish 国际象棋游戏 in Rust using Bevy Rust on the BBC micro:bit Developing 智能合约 with ink!</description>
    </item>
    
    <item>
      <title>Rust周报 368(译)</title>
      <link>/2020/12/11/rust%E5%91%A8%E6%8A%A5-368%E8%AF%91/</link>
      <pubDate>Fri, 11 Dec 2020 17:20:23 +0800</pubDate>
      
      <guid>/2020/12/11/rust%E5%91%A8%E6%8A%A5-368%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-12-09 原文：368 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  The Foundation 交流会  Newsletters  This Month in Rust GameDev #16 - November 2020 RiB Newsletter #18 - On to the Ribbles  Tooling  Rust Analyzer Changelog #54 Knurling-rs Changelog #9 IntelliJ Rust: Updates for 2020.3  Observations/Thoughts  Monads and GATs in Nightly Rust &amp;ndash;&amp;gt; ruanyifeng 解释 Monads 消除 零 for 几何代数 in Rust On 泛型 和 关联类型 自适应 请求并发。 大规模化的弹性观察能力。 Rust 压缩库 Rust 让 跨平台编译，简单到如同小孩的玩意 使用 builder 模式，去定义测试场景 测量 内存使用 in Rust 切换用户，节省时间: Async 支持 in Goose 为什么 Rust 的用意，是去替代 C  Rust Walkthroughs  实时视频处理 with Rust, FFmpeg and OpenCV 合并 k 排序数组 in Rust Make A Language - Part Thirteen: Whitespace &amp;amp; Events 单元测试一个 console app (a text editor) Rust and Async (on embedded devices) 避免重复 Strings in Rust OS in Rust: Custom target to build kernel for bare metal: Part-3 OS in Rust: Building kernel for custom target: Part-4 [视频] introduction to rust part 2  Project Updates  rust-gpu v0.</description>
    </item>
    
    <item>
      <title>Rust周报 367(译)</title>
      <link>/2020/12/05/rust%E5%91%A8%E6%8A%A5-367%E8%AF%91/</link>
      <pubDate>Sat, 05 Dec 2020 21:20:26 +0800</pubDate>
      
      <guid>/2020/12/05/rust%E5%91%A8%E6%8A%A5-367%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-12-02 原文：367 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有项目更新。
Official  Announcing Rustup 1.23.0  Newsletters  This Month in Rust Dimforge #3  Tooling  IntelliJ Rust Changelog #136 Rust Analyzer Changelog #53 Knurling-rs Changelog #8  Observations/Thoughts  Rust 开发持续性 为什么 Rust&amp;rsquo;s BTreeMap 没有 with_capacity() 方法? 为什么 WebAssembly 和 Rust 一起能提升 Node.js 性能 lib-ruby-parser Understanding Partial Moves in Rust Error 处理真困难 可扩展性基准测试 with Rust Streams 上个月，我将 1 万行 JS 代码，变为 Rust。这里，我记录下  Rust Walkthroughs  References in Rust OS in Rust: Building kernel for custom target: Part-4 用 Elixir 方式，编写 Rust Risp (in (Rust) (Lisp)) Props 和 嵌套的 Components，with Yew 通过 Rust，使用 Selenium Rocket Tutorial 04: Data Persistency and Rocket (with MongoDB) The Little Book of Rust Macros [系列视频] futures explained in 200 lines of rust [视频] demo: 🦀️ building a runtime reflection system for rust [视频] sapling livestream 5 - deleting code  Miscellaneous  为什么科学家，开始使用 Rust Pijul - 简单，合理，可扩展的版本控制系统 Amazon: We&amp;rsquo;re hiring software engineers who know programming language Rust  Crate of the Week 这周的箱子是kira，一个用于表达游戏音频的库</description>
    </item>
    
    <item>
      <title>Rust周报 366(译)</title>
      <link>/2020/11/26/rust%E5%91%A8%E6%8A%A5-366%E8%AF%91/</link>
      <pubDate>Thu, 26 Nov 2020 20:13:21 +0800</pubDate>
      
      <guid>/2020/11/26/rust%E5%91%A8%E6%8A%A5-366%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-11-25 原文：366 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [内部] Error Handling 项目组在做什么呢  Newsletters Tooling  Rust Analyzer Changelog #52 Knurling-rs Changelog #7  Observations/Thoughts  FlatBuffer as 序列化，未知的 IDL（接口与类型定义语言） WTF is Rust? 插图版 从第一行 Rust 开始 加速我的 JS 模板编译器 Benchpress println 变为可爱型的 pwintln UwU  Rust Walkthroughs  Hands-on Rust: 通过 2D 游戏开发，高效学习 对 Embedded C and Rust 的 CBOR IoT 数据序列化 与 Yew 的基本交互 Testing your crate C-API Rocket Tutorial 03 part II: Proper Testing Select（IO 多路复用机制） Syscall in Rust FBSim: football-playing AI agents in Rust Building a Recipe Manager - Part 5 - 数据完整性 对 STM32WLE 的 Bootstrapping 支持，with the Embedded Rust ecosystem 食谱：Calling Swift Closures from Asynchronous Rust Code [视频] a cool generic concurrency primitive in rust [视频] creative coding in rust: re-creating a retro screensaver [视频] (live coding) audio adventures in rust: packaging actix + react app as macos bundle [视频] prototype (rust tutorial) - design patterns  Project Updates  cargo-mobile: Rust on mobile 简单化!</description>
    </item>
    
    <item>
      <title>Rust周报 365(译)</title>
      <link>/2020/11/21/rust%E5%91%A8%E6%8A%A5-365%E8%AF%91/</link>
      <pubDate>Sat, 21 Nov 2020 00:24:55 +0800</pubDate>
      
      <guid>/2020/11/21/rust%E5%91%A8%E6%8A%A5-365%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-11-18 原文：365 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  Announcing Rust 1.48.0 [内部] source-based 代码覆盖率 in nightly  Newsletters Tooling  IntelliJ Rust Changelog #135 Rust-Analyzer Changelog #51 Knurling-rs Changelog #6  Observations/Thoughts  ECS 规划者想法, Part 1 生成一个 config 文件模板, for CLI tools in Rust Rust in 2021 Anonymous Sum Types(各类错误类型合集) for Rust Error Handling C 标准库不是没有依赖 Trait 实现的&amp;rsquo;可见性&amp;rsquo;  Rust Walkthroughs  SQLite 文件解析器 Pt.</description>
    </item>
    
    <item>
      <title>Rust周报 364(译)</title>
      <link>/2020/11/14/rust%E5%91%A8%E6%8A%A5-364%E8%AF%91/</link>
      <pubDate>Sat, 14 Nov 2020 18:02:52 +0800</pubDate>
      
      <guid>/2020/11/14/rust%E5%91%A8%E6%8A%A5-364%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-11-11 原文：364 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [内部] Rust compiler，PGO（按配置优化）  Newsletters  This Month in Rust OSDev (October 2020) This Month in Rust GameDev #15 - October 2020  Tooling  Rust-Analyzer Changelog #50 用 OKteto 进行 Kubernetes 化，开发 &amp;amp; 发布 Your Rust Application  Observations/Thoughts  Rust 光追器, 一次更新 (and SIMD) Rust 的 emit=asm 功能可能会被误解 静态分析器配置: Clippy for Rust, part 1 为啥说 Rust 是游戏开发的未来 Rust 是一个 ’丰满‘的高级语言 40 毫秒 bug 后处理型的宏 in Rust 权衡性，嵌入式数据 Why Developers Love Rust  Rust Walkthroughs  Make a Language - Part Nine: Function Calls 构建一个天气站 UI 获取图像输出 from our Custom RISC-V Operating System in Rust Build your own: GPG Rpi 4 遇见 Flutter 与 Rust AWS Lambda + Rust Orchestration（编排） in Rust Rocket Tutorial 02: Minimalist API 简单 IO 分析 using Rust (throughput, &amp;hellip;) Type-Safe 离散事件仿真 in Rust [系列] a gemini client in rust 处理一系列 Items with Iterators in Rust Active Directory（管理网络目录权限）的日志汇集 Using Rust [FR] the rust programming language (translated in french)  Project Updates  新的 doc 注释控制实现 in rustdoc  Miscellaneous  Rust vs Go 我是这样学习汇编的：通过编写大量的操蛋的编译器 in Rust  Crate of the Week 这周的箱子是postfix-macros，这是一个聪明的技巧箱子，可以在 stable Rust 中，使用 postfix 宏。</description>
    </item>
    
    <item>
      <title>Rust周报 363(译)</title>
      <link>/2020/11/07/rust%E5%91%A8%E6%8A%A5-363%E8%AF%91/</link>
      <pubDate>Sat, 07 Nov 2020 13:16:43 +0800</pubDate>
      
      <guid>/2020/11/07/rust%E5%91%A8%E6%8A%A5-363%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-11-04 原文：363 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有 Rust Blog 帖子。
Newsletters  RiB Newsletter #17 - Trick? Or Trait? This month in Dimforge #2 (October 2020) These Weeks in Actix | Sep-Oct &amp;lsquo;20  Tooling  Rust-Analyzer Changelog #49 IntelliJ Rust Changelog #134 IntelliJ Rust: 新功能性 Cargo Features  Observations/Thoughts  Semantic FFI Bindings in Rust - 重启 the Borrow Checker 异常安全 in Rust: using transient（短暂的） droppers 防止内存泄漏 Wasmcloud 进度 Fast programming languages: C, C++, Rust, and Assembly 对于复杂的应用, Rust 生产力可比 Kotlin Rust for 数据密集型计算 Using Rust for a simple 硬件项目 致命缺陷之 Ownership Semantics 修复 bootstrap of rustc，通过使用 cg_clif Cargo [features] 高阶用法  Rust Walkthroughs  Rust 测试性设计: 调查问卷 Rust from a Gopher - Lessons 3 &amp;amp; 4 （Web 框架）Rocket Tutorial 01: 基础 构建一个 AWS Lambda 扩展 with Rust A Gopher Client in Rust - 02 Core Client A Gopher Client in Rust - 03 Bookmarks and Full Code Rust HTTP Testing：使用 httpmock Newtype 模式 in Rust How to: Rust + SDL2 + OpenGL on the web 微编译器: Lexing 持续发布 For Rust Applications (Zero To Production In Rust #5) [DE] The Rust Programming Language (translated in German) [video] (Live Coding) Audio adventures in Rust: UI with WASM, Yew, and WebView [video] How to build a multiplayer game - RustFest.</description>
    </item>
    
    <item>
      <title>Rust周报 362(译)</title>
      <link>/2020/10/29/rust%E5%91%A8%E6%8A%A5-362%E8%AF%91/</link>
      <pubDate>Thu, 29 Oct 2020 22:54:11 +0800</pubDate>
      
      <guid>/2020/10/29/rust%E5%91%A8%E6%8A%A5-362%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-10-28 原文：362 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
RustFest Global RustFest schedule上线啦！RustFest 提供免费门票，截止日期为 11 月 1 日 。全时区，所有人都可以使用！
Updates from Rust Community 本周没有新闻通讯。
Official  [内部]core 队员变更  Tooling  Rust Analyzer Changelog #48 Knurling-rs Changelog #3  Observations/Thoughts  斗争进行中：Rust&amp;rsquo;s Expressive Type System XMHell: 处理 38GB， UTF-16 XML 文件地狱 （一个快速游戏制作聚会）LudumDare 47 - The Island 食谱管理程序 - Part 3 - Parsing and more Druid 通过 OIBITs（别称：auto traits），模拟（默认方法）specialization  Flask Creator Armin Ronacher 采访 妙探寻凶游戏重构  Learn Rust  Rust for a Gopher Lesson 1 Rust for a Gopher Lesson 2 用 AssemblyLift 构建 &amp;ldquo;todo 清单&amp;rdquo; 🚀🔒 听说，你想要面向对象的 Rust [系列] a web app in rust 向 IntelliJ Rust 插件提供帮助: 实现一个 refactoring 5 倍速： Rust Docker Builds with cargo-chef 编写一个简单的 AWS Lambda Custom Runtime in Rust 来了来了，他来了!</description>
    </item>
    
    <item>
      <title>Rust周报 361(译)</title>
      <link>/2020/10/23/rust%E5%91%A8%E6%8A%A5-361%E8%AF%91/</link>
      <pubDate>Fri, 23 Oct 2020 22:59:34 +0800</pubDate>
      
      <guid>/2020/10/23/rust%E5%91%A8%E6%8A%A5-361%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-10-21 原文：361 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  将 issues 标记为 regressions [内部] lang team RFC 大整理 和 项目协议  Tooling  Rust-Analyzer Changelog #47 IntelliJ Rust Changelog #133  Observations/Thoughts  无畏并发: Clojure, Rust, Pony, Erlang and Dart 是怎么做到这一步的。 震惊 Result&amp;lt;&amp;gt;?: 关于文件解析上的一个测试，Rust 快过 Python  构建一个 Recipe 管理器 - Part 2 - Druid 经验报告 不, C++ 还没有切掉它 Rust&amp;rsquo;s move/copy/drop 语义的一个陷阱，和 对数据进行 0 处理 证明：1 + 1 = 10 in Rust 学习 std::io::Error 与 Rust&amp;rsquo;s Traits 玩耍  Learn Simple Rust  Arrays, vectors 和 slices in Rust 构建你自己的 Error Type: Part 1 Lifetimes in Rust Piece by Piece: 编写 Readable Rust Code 那些个 out 参数 in Rust，会是符合常理的吗?</description>
    </item>
    
    <item>
      <title>Rust周报 360(译)</title>
      <link>/2020/10/15/rust%E5%91%A8%E6%8A%A5-360%E8%AF%91/</link>
      <pubDate>Thu, 15 Oct 2020 20:22:02 +0800</pubDate>
      
      <guid>/2020/10/15/rust%E5%91%A8%E6%8A%A5-360%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-10-14 原文：360 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  Announcing Rust 1.47.0  Newsletters  Rust GameDev 月刊 #14  Tooling  Rust Analyzer Changelog #46 关于 rust 代码覆盖率的两个视频 in VSCode  Observations/Thoughts  美好背后的 Rust 构建最快的 RaptorQ (RFC6330) Codec in Rust 通过开源和在线代码预览，学习 Rust 制作一个 Canvas Based 游戏的错误， with Rust and WebAssembly Cranelift 新后端, Part 1: Instruction Selection Optional parameters in Rust 构建一个 async-compatible actor system [视频] contract as code as contract: using rust to unify specification and implementation  Learn Simple Rust  Iterators in Rust Learn Rust Together Part 5: Structs and Enums!</description>
    </item>
    
    <item>
      <title>Rust周报 359(译)</title>
      <link>/2020/10/08/rust%E5%91%A8%E6%8A%A5-359%E8%AF%91/</link>
      <pubDate>Thu, 08 Oct 2020 14:03:46 +0800</pubDate>
      
      <guid>/2020/10/08/rust%E5%91%A8%E6%8A%A5-359%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-10-07 原文：359 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community Official  [Inside] 1.47.0 pre-release testing [Inside] 1.47.0 second pre-release testing  Newsletters  Rust OSDev (9, 2020) 月刊 Rust in Blockchain Newsletter #16 - Secure Enclaves（大致可翻译为：安全地带） à la Crab（法语：螃蟹） Dimforge #1 (10, 2020) 月刊  Tooling  Rust Analyzer Changelog #45 IntelliJ Rust Changelog #132  Observations/Thoughts  为什么我把 use 语句放得到处都是？ Rust + 树莓派 Tide Clock 现，赋予你编写 Slow Rust Code Rust 遇上 the web - programming 范例的冲突 动态小组件 草图 后感：创作 JS Library with Rust and Wasm Ringbahn III: 深入 drivers Fast Thread Locals In Rust Formicarium：集群智能  Learn Simple Rust  Dancing Links In Rust 入门 nRF52840 in Rust That&amp;rsquo;s so Rust!</description>
    </item>
    
    <item>
      <title>Rust周报 358(译)</title>
      <link>/2020/10/01/rust%E5%91%A8%E6%8A%A5-358%E8%AF%91/</link>
      <pubDate>Thu, 01 Oct 2020 13:38:35 +0800</pubDate>
      
      <guid>/2020/10/01/rust%E5%91%A8%E6%8A%A5-358%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-09-30 原文：358 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community 本周没有新闻通讯。
Official  [Inside] 宣布可移植的 SIMD 项目组  Tooling  Rust Analyzer Changelog #44 Knurling-rs Changelog #2  Observations/Thoughts  基准测试第二章: Actix 对 Rocket v0.4 and v0.5-dev 优化之旅 - Rust Code 极速 重新回顾那 &amp;lsquo;smaller Rust&amp;rsquo; A Future for Rust Debugging 以开源的形式，学习 Rust 所以你想要 即时重载 Rust Drop order in Rust: 相当棘手  Learn Simple Rust  Rust 1.</description>
    </item>
    
    <item>
      <title>Rust周报 357(译)</title>
      <link>/2020/09/24/rust%E5%91%A8%E6%8A%A5-357%E8%AF%91/</link>
      <pubDate>Thu, 24 Sep 2020 23:27:04 +0800</pubDate>
      
      <guid>/2020/09/24/rust%E5%91%A8%E6%8A%A5-357%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-09-23 原文：357 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 本周没有新闻通讯。
官方  2021 年路线图参与博客，即将结束 宣布错误处理项目组 [内部] intra-doc links 接近稳定  工具  IntelliJ Rust 更新日志＃131 Rust Analyzer 变更日志＃43 Knurling-rs 变更日志＃1  观察/想法  将 EBU R128 音频响度分析，从 C 移植到 Rust 字符串上的类型：Rust 中的可扩展架构 为什么不用 Rust？ 为什么不用 Rust for 安全？ 为什么 Rust 不是成熟的编程语言 我最喜欢的 Rust 签名 Rust 是伪装的函数式语言吗？ Async Iteration 语义 Cranelift 的新后端，第 1 部分：指令选择 丢码 我开始学习 Rust 基于纯 AST 的 linting，真的很烂 Rust 嵌入式抽象的潜在改进  学习标准 Rust  TL;;DR Rust Rust 中的变量和可变性 Rust 初学者的工作路线 学习 Rust：OMG WTF RS —— 帮助您入门 Rust 的资源 仅用 10 行编写您自己的 Rust 编译器插件！ Rust 中的可选参数 Rust 二叉搜索树的实现 [FR] le concept de “propriétaire” ou “ownership” en rust [TH] rustler 101: ferris say  了解更多 Rust  动态迭代器 底层-学院 使用 tokio，在 Rust 中编写 HTTP（S）隧道。 与 TLS 同舞 实在太 Rust 啦：元编程 Bevy 游戏引擎＃1 使用 Rust 和 WebAssembly 在 Node.</description>
    </item>
    
    <item>
      <title>Rust周报 356(译)</title>
      <link>/2020/09/18/rust%E5%91%A8%E6%8A%A5-356%E8%AF%91/</link>
      <pubDate>Fri, 18 Sep 2020 12:03:53 +0800</pubDate>
      
      <guid>/2020/09/18/rust%E5%91%A8%E6%8A%A5-356%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-09-16 原文：356 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community（Rust 社区更新） Newsletters（时讯） 本周没有时讯
Official（官方）  发起 2020 Rust 状态调查 WG-prioritization 团队，呼吁参与  Tooling（工具）  Rust Analyzer Changelog #42  Observations/Thoughts（观察/思考）  哪些解析方法? 挑战 LR Parsing 从对 Http4k, Ktor (Kotlin) 和 Actix v2, v3 (Rust) Microservices 的基准测试中，学到什么 Rust 中没有 Namespaces，可以是一个 Feature 构建 devserver: 一个超少的 Rust Server 驯服 nalgebra&amp;rsquo;s Rustdoc Rust 在科学 和不断变化的需求的应用 From @Test to #[test]: 一个关于 Java 和 Rust 之间测试的小故事  Learn Standard Rust  用一个 API，收集数据 SQLite 文件解析器 第一部分: The Header Rust 面向数据设计的介绍 Rust for Java developers 用 zbus 为桌面应用增色  Learn More Rust  实现 Records in x7 让我们构建一体 gRPC server-client 二进制文件 with Rust in 2020 - 第四部分 制造一个语言 - 第三部分: 定义 variables 用 httpmock 进行 Rust HTTP 测试  Project Updates  宣布 CCS811 室内空气质量传感器.</description>
    </item>
    
    <item>
      <title>Rust周报 355(译)</title>
      <link>/2020/09/10/rust%E5%91%A8%E6%8A%A5-355%E8%AF%91/</link>
      <pubDate>Thu, 10 Sep 2020 21:44:15 +0800</pubDate>
      
      <guid>/2020/09/10/rust%E5%91%A8%E6%8A%A5-355%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-09-09 原文：355 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community（Rust 社区更新） Official（官方）  计划 2021 路线图  Tooling（工具）  Rust Analyzer Changelog #41 IntelliJ Rust Changelog #130  Newsletters（时讯）  Rust GameDev 月刊 #13 - 8 月 2020 Rust OSDev 月刊 (8 月 2020)  Observations/Thoughts（观察/思考）  回顾我的第一个有用 Rust 项目  Learn Standard Rust  [TR] Rust Turu [视频] Choosing Rust - Intro to Rust and Ownership  Learn More Rust  Linux System Call fork() 窥视 Rust enum 如何再次加速 Rust 编译器 Rust on Haiku: 隐蔽死亡线程的情况 C++ vs Rust: 一个异步的一核一线程的故事 Twistrs - 域名枚举库 如果你想要性能的话, 就作弊吧!</description>
    </item>
    
    <item>
      <title>Rust周报 354(译)</title>
      <link>/2020/09/05/rust%E5%91%A8%E6%8A%A5-354%E8%AF%91/</link>
      <pubDate>Sat, 05 Sep 2020 22:33:02 +0800</pubDate>
      
      <guid>/2020/09/05/rust%E5%91%A8%E6%8A%A5-354%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-09-04 原文：354 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community（Rust 社区更新） Official（官方）  宣 Rust 1.46.0  Tooling（工具）  Rust Analyzer Changelog #40 给予 IntelliJ Rust 插件帮助: Writing an intention  Newsletters（时讯）  Rust 区块链月刊 #15 - Turbofish in the Blocksea  Observations/Thoughts（观察/思考）  我们应该把系统编程语言的未来，压在 Rust 身上吗? Optionality（可选性） in the type systems of Julia and Rust 从 quick-error 迁移到 SNAFU: 关于改进错误处理流程的故事 去使用那些 Traits 吧 Starframe devlog: 架构 将事件链（Event Chaining）作为一种解耦方法 in Entity-Component-System Rust 序列化功能: 啥是已经准备好放入生产环境了呢?</description>
    </item>
    
    <item>
      <title>Rust周报 353(译)</title>
      <link>/2020/08/27/rust%E5%91%A8%E6%8A%A5-353%E8%AF%91/</link>
      <pubDate>Thu, 27 Aug 2020 22:47:57 +0800</pubDate>
      
      <guid>/2020/08/27/rust%E5%91%A8%E6%8A%A5-353%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-08-26 原文：353 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Updates from Rust Community（Rust 社区更新） Official（官方） Tooling（工具）  给予 IntelliJ Rust 插件帮助 IntelliJ Rust Changelog #129 Rust Analyzer Changelog #39  Newsletters（时讯）  This Week in Veloren 81 嵌入式工作组 Newsletter - 25  Observations/Thoughts（观察/思考）  通过 Rusoto ，和 IAM Roles 用于服务器账号，在 Rust-based Kubernetes 应用访问 Amazon Web Services 书接上文: 裸机 Rust 的泛型 关于 Rust vs OCaml 的首次想法 safe FFI bindings in Rust 的问题 That&amp;rsquo;s so Rusty!</description>
    </item>
    
    <item>
      <title>Rust周报 352(译)</title>
      <link>/2020/08/21/rust%E5%91%A8%E6%8A%A5-352%E8%AF%91/</link>
      <pubDate>Fri, 21 Aug 2020 00:07:53 +0800</pubDate>
      
      <guid>/2020/08/21/rust%E5%91%A8%E6%8A%A5-352%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-08-18 原文：352 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Updates from Rust Community（Rust 社区更新） Official（官方）  为 Rust&amp;rsquo;s future 打好地基  Tooling（工具）  Rust Analyzer Changelog #38  Newsletters（时讯）  嵌入式工作组 Newsletter - 24  Observations/Thoughts（观察/思考）  为什么 Rust 挺合适嵌入式软件 为什么 Rust&amp;rsquo;s Unsafe 就能行 Rust RwLock 和 Mutex 性能怪癖 2020 最激动人心的旅程 丝滑般的 resize 测试 &amp;ldquo;Rust 并没有一个稳定的(stable) ABI&amp;rdquo; Rust 回顾 Rust vs C++: 一个 JS/TS 开发者的角度 比较 Unsafety Code Smell: 具体抽象 抵制 Glob 形式（::*）的导入  Learn Standard Rust  Lifetimes in Rust Learning Rust: 编译器可是你的朋友 我是一名 Java, C#, C or C++ 开发者, 是时候搞搞 Rust 啦 令人沮丧?</description>
    </item>
    
    <item>
      <title>Rust周报 351(译)</title>
      <link>/2020/08/13/rust%E5%91%A8%E6%8A%A5-351%E8%AF%91/</link>
      <pubDate>Thu, 13 Aug 2020 15:57:34 +0800</pubDate>
      
      <guid>/2020/08/13/rust%E5%91%A8%E6%8A%A5-351%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-08-11 原文：351 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 本周没有正式的 Rust 公告！:)
工具  Rust Analyzer Changelog ＃37 IntelliJ Rust 更新日志＃128  时事通讯  Rust GameDev＃12 月刊 -2020 年 7 月 Rust in Blockchain -我们的智能（合约），好了吗？  观察/想法  史蒂夫·克拉伯尼克（Steve Klabnik）访谈 为什么 QEMU 应该从 C 变成 Rust Rust 的第一印象 如何坚持使用 Rust  为什么学习 Rust 很棒&amp;hellip;作为第二语言 零成本抽象需要的最小优化集合是什么？ Propane：Rust 的实验性 generator 语法 [ES] ¿por qué me gusta tanto rust?</description>
    </item>
    
    <item>
      <title>Rust周报 350(译)</title>
      <link>/2020/08/07/rust%E5%91%A8%E6%8A%A5-350%E8%AF%91/</link>
      <pubDate>Fri, 07 Aug 2020 00:21:23 +0800</pubDate>
      
      <guid>/2020/08/07/rust%E5%91%A8%E6%8A%A5-350%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-08-04 原文：350 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 官方  宣布 Rust 1.45.1 宣布 Rust 1.45.2  工具  Rust Analyzer Changelog ＃36 IntelliJ Rust：2020.2 版本的更新 Headcrab：2020 年 7 月进度报告  时事通讯  Rust OSDev 月刊（2020 年 7 月）  观察/思考  Go vs Rust：编写 CLI 工具 如何在 2020 年，加快 Rust 编译器的速度 云（Cloud）上，Rust TLS 和 Postgres 的奇怪故事  学习标准 Rust  学习 Rust：心态和期望 了解 Rust 借用检查器 Rust 错误处理 —— 初学者指南 Rust Hashmaps 教程 Rust：什么是“内存安全”，真的吗？ 如何使用 Rust 编译器作为你自用的集成测试框架 一个全面的教程 —— Rust 初学者 关于无符号（Unsigned）、有符号整数（Signed Integers）和 Casting（转换）in Rust Rust 的内存安全性 —— 第 2 部分 Rust 汇编的友好简介 通过使用non exhaustiveenums，防止 Future 版本中的破坏性代码更改 Stacks 的 一堆（Heaping）帮助 Python 使用者之 Rust 1：Why 和 When？ [PT] aprendendo rust: 05 - funções [RU] rust: работа с потоками [video] learning rust by working through the rustlings exercises  了解更多 Rust  为 Rust 项目创建 Linux 包（1/2） Raspberry Pi 上的 Rust 操作系统开发教程 用 Rust 逆向工程一个 USB 设备 A Simple Crud on Rust (With Rocket.</description>
    </item>
    
    <item>
      <title>Rust周报 349(译)</title>
      <link>/2020/07/31/rust%E5%91%A8%E6%8A%A5-349%E8%AF%91/</link>
      <pubDate>Fri, 31 Jul 2020 20:36:01 +0800</pubDate>
      
      <guid>/2020/07/31/rust%E5%91%A8%E6%8A%A5-349%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-07-28 原文：349 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 官方  开展，核心团队议程 Rust 的 CI 正在转向 GitHub Actions  工具  IntelliJ Rust 更新日志＃127 Rust Analyzer Changelog ＃35  观察/想法  深入了解 Rust 编程语言 关于较小 Rust 的注意事项 Rust at FP Complete，2020 年更新 为什么 Rust 模块系统，可能是难以理解 让 Rust 在 2020 年再发一枪  学习  Rust 使用&amp;rsquo;英语&amp;rsquo;简单解释 Rust 中的（几种）高级变量类型 Tokio 和 async Rust 教程 Rust 中面向数据设计，简介 通过将 Python 思维转换到 Rust —— 学习 Rust Rust 从头开始编写文件系统 Rust 的内存安全 —— 第 1 部分 使用 Rusoto 和 Serde，分析 GitHub TB 级别的压缩文档数据 Rust 的大小关系 今年七月，Rust 编写的数据库项目 Rust 中的 Cell，RefCell 和内部可变性（Interior Mutability） Rust 中的 命令行自动补全算法 可扩展，概念证明的权限系统：使用 accumulators 从 C＃到 Rust：代码基础 Rust 和 WebAssembly 的 Hello World 交互式 ‘弦’ 图（使用 Rust 进行数据分析） Rust 计算斐波纳契数的一些（许多）方法 用 Rust 编写一个简单的查询系统 带有 Rust 和 Diesel 的 JSONB Data Enum 或 Trait Object Rayon 并行流（Parallel Stream）处理 Compile Time CUDA 设备检查 使用 Rust，进行 AVR 的 Async/Await 使用 Rust 和 WebAssembly，在 48 小时内制作游戏 [葡萄牙语] aprendendo rust: 04 - comentários, documentação e tipos de variáveis primitivas [英国] пошук в глибину на прикладі задачі ханойської вежі [视频] utility ai (with rust example) - how-to [视频] writing a guide to slice data in rust [视频] learning rust gamedev patterns [视频] run any web container for free on google cloudrun (example in rust/warp) [视频] technologieplauscherl: memory ownership in c# and rust [视频] fltk rust tutorial: create a media player using the vlc crate [视频] rust at speed - building a fast concurrent database [法语] [视频] Développement Web Rust &amp;amp; Rocket [葡萄牙语] [视频] Hoje sai o data tables em RUST  项目更新  Ballista 分布式计算：一年后 使用 Nix 跨平台编译为 Redox 公开声明：您现在可以在 Redox OS 上，使用 GDB 调试程序啦 Rocket 现在可以在 Stable Rust 上编译  杂项  ANSSI —— 使用 Rust 开发安全应用程序的编程规则 在 5 种最主要的语言受欢迎度列表中，Rust 现在是排名前 20 位的语言 站在 Linkerd 最先进的 Rust 代理背后的是，Linkerd2-proxy 性能比较：Rust，PyO3 和 Python 优化 Rust ：顺时针三角形  周箱 这周的箱子是polyfuse，一个用于使用异步代码编写 FUSE 文件系统的库。</description>
    </item>
    
    <item>
      <title>Rust周报 348(译)</title>
      <link>/2020/07/23/rust%E5%91%A8%E6%8A%A5-348%E8%AF%91/</link>
      <pubDate>Thu, 23 Jul 2020 21:11:35 +0800</pubDate>
      
      <guid>/2020/07/23/rust%E5%91%A8%E6%8A%A5-348%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-07-21 原文：348 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  crates.io 安全咨文 宣布 Rust 1.45.0 Trait 工作组 2020 第三冲刺总结 2020 年最值得学习的编程语言（Rust Lang） 了解如何用 Rust，制作推箱子游戏！ 详细说明 Rust 的模块系统 查看 Rust features 的状态 Programming Servo：随处可见 使用 Rust ，对终极 Tic Tac Toe 的高效描述 下一个算法：回溯 n 个皇后问题 RSoC：改进驱动程序和内核 —— 第 3 部分（主要是 io_uring） 用 Rust 编写异步 MQTT Broker —— 第 2 部分 Rust 闭包：move闭包，返回impl Fn 用 Rust 编写内核驱动程序 用 Rust 重写 FORTRAN 软件 用 Rust 构建和调试高吞吐量守护程序 为什么甚至未使用的数据也需要有效 响应式 IDE 的三种架构 包装和&amp;rsquo;售出&amp;rsquo; Rust 软件 —— Windows 异步 Rust，但不那么吓人 Rust Analyzer Changelog ＃34 基准测试 Rust＆Go 的 gRPC Rust 中的函数重载 几何约束求解器第 1 部分：代数表达式 Haskell::From(Rust) I：中缀表示法和 Currying 如何用 Rust 编写队列 实现一个工作流程图 在 Rust 中，实现flat_map IntelliJ Rust 0.</description>
    </item>
    
    <item>
      <title>Rust周报 347(译)</title>
      <link>/2020/07/15/rust%E5%91%A8%E6%8A%A5-347%E8%AF%91/</link>
      <pubDate>Wed, 15 Jul 2020 10:52:19 +0800</pubDate>
      
      <guid>/2020/07/15/rust%E5%91%A8%E6%8A%A5-347%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-07-14 原文：347 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  宣布 Rustup 1.22.1 语言团队设计会议：通往成员之路 Rust 社区缓和的观点 Programming Servo：鸟瞰 更快的整数解析（Rust port） 学习 Rust：让我们构建一个解析器 nnnoiseless：将音频代码，从 C 移植到 rust 新调试器的灵魂 Rust 中的 String interners Rust 的 Target Feature vs Target CPU Rust 及其孤儿（Orphan）规则 异步访谈＃8：Stjepan Glavina 在 Rust 中使用 RabbitMQ 创建一个自定义目标 静态，Sized，高阶的多态性 摆脱 Rust futures 的麻烦 Rust Analyzer 变更日志＃33 IntelliJ Rust 更新日志＃126 Rust OSDev 月刊（2020 年 6 月） 跨平台编译 Rust， 从 ARM 到 x86-64 用 Rustler，为 Elixir 编写 Rust NIF 几何约束 求解器第 1 部分：代数表达式 观察，Rust 异步内存访问 构建 Canrun：用于 Rust 的静态类型，逻辑编程库（第 1 部分） 在 Rust Wasm build 中，寻找非确定性错误 在 Rust 中实现 Clipper Chip 密码 Linux 开发人员可能会讨论，在内核中允许 Rust 代码 Rust 和 WebAssembly 中的机器学习 从 TypeScript 迁移到 Rust / WebAssembly RSoC：改进 驱动程序和内核 —— 第 1 部分（更大的 io_uring） 从零开始的 Rust 和 WebAssembly：带 Strings 的 Hello World 适用于 JavaScript 开发人员的 Rust —— 模式匹配和枚举 令人惊讶的是，Rust 作为服务器语言是真的棒 实现标准化 Rust，描述人员的一些经验 在 Rust 中，子类化 GTK 小部件 [西班牙文] rust es orientado a objeto?</description>
    </item>
    
    <item>
      <title>Rust周报 346(译)</title>
      <link>/2020/07/10/rust%E5%91%A8%E6%8A%A5-346%E8%AF%91/</link>
      <pubDate>Fri, 10 Jul 2020 14:49:32 +0800</pubDate>
      
      <guid>/2020/07/10/rust%E5%91%A8%E6%8A%A5-346%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-07-07 原文：346 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  宣布 Rustup 1.22.0 标准库实现：所有权「Ownership」 编译器团队 2020-2021 年，路线图会议纪要 回到古老的技巧..（或 Rust 中的婴儿学步的阶段） Rust 中的小 strings 选择 一项 Rust Web 框架，2020 edition Rust 编写 Interpreters：指南 让一个 Kernel 模块转成 Rust 所带来的：好的，坏的和丑陋的 Bad Apple！！以及我如何为任务管理器编写一个 Rust 视频播放器！！ Boa 发布 v0.9 版，并利用 Rust 量化 RiB（Rust in Blockchain）新闻稿#13 我从将 C 密码库移植到 Rust 中，学到的 7 件事 Rust GameDev 月刊#11 中（2020 年 6 月） Rust 配 AWS Lambda 用 Rust 写一个 4K 的成功介绍 Ringbahn II：中央状态机 Tide 上的 Bastion：第二部分 把 Godot 移植到 Rust（P1） 图像衰减服务 IntelliJ 变更日志 #125 抽象出正确性 Rust 的 渲染 Rust fuzzing —— 超级英雄式的代码审查 什么是悬挂的指针？ 简单的 Rocket 网络框架教程 | POST 请求 操作系统进阶：系统调用 分配 API、分配器和虚拟内存 Cargo [features] 举例说明 嵌入式 Rust 中的并发模式 WebAssembly 和 Rust 入门 如何在 Rust 中，编写一个 Stack 在 Rust 中实现 WebSockets rust-analyzer 变更日志 32 Rust for JavaScript 开发人员 —— 函数和控制流 Rust：新的 LLVM 使用 Rust 和 WebAssembly 处理视频源中的像素 带有 Rust 和 React 的 WebAssembly（使用 create React app） [葡萄牙语] aprendendo rust: 01 - hello world [音频] mun [音频] rust and machine learning #3 with alec mocatta (ep.</description>
    </item>
    
    <item>
      <title>Rust周报 345(译)</title>
      <link>/2020/07/01/rust%E5%91%A8%E6%8A%A5-345%E8%AF%91/</link>
      <pubDate>Wed, 01 Jul 2020 20:37:12 +0800</pubDate>
      
      <guid>/2020/07/01/rust%E5%91%A8%E6%8A%A5-345%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-06-30 原文：345 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  async in Rust 实用指南 安全 Rust 准则 —— ANSSI（法国国家网络安全局） 使用 VSCode 在 AWS EC2 上，更快地进行 Rust 开发 Rust 验证工具 用 Rust 检查 ARM vs X86 内存模型 磁盘空间和 LTO 的改进 Rust 构建更快的 CouchDB View 服务器 使用 SQLx 和 Postgres 实现一个作业队列 Rust + Actix + CosmosDB（MongoDB）教程 api 极其简单的 Rust Rocket 框架教程 使用 Rust 和 Rocket 构建智能书签工具 一个 Future 就是一个暂停的调度程序 为 Raspberry Pi 跨平台构建 Rust GStreamer 插件 xi-editor 回顾 Rust 编写的数据库项目，本月报告 Rust 编译缓慢的较多原因 在 RISC-V 上，修复 Rust 的测试套件 Rust - Protobuf 代码生成 使用 Rust 和 OpenCV 跟踪眼中心位置 使用 rust，blurz，读取一个 BLE 设备 rust-analyzer 变更日志 ＃31 IntelliJ Rust 变更日志 ＃125 [视频] manipulating ports, virtual ports and pseudo terminals - rust wrocław webinar [视频] rust stream: iterators  周箱 这周的箱子是print_bytes，该库可将任意 bytes，尽可能无损地打印到 stream 中。</description>
    </item>
    
    <item>
      <title>Rust周报 344(译)</title>
      <link>/2020/06/24/rust%E5%91%A8%E6%8A%A5-344%E8%AF%91/</link>
      <pubDate>Wed, 24 Jun 2020 17:04:12 +0800</pubDate>
      
      <guid>/2020/06/24/rust%E5%91%A8%E6%8A%A5-344%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-06-23 原文：344 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
退房本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  宣布 Rust 1.44.1 Rust 编写 Non-Trivial 宏 用一个 CLI 深掘 Rust 用于数据密集型计算的 Rust 3K，60fps，130ms：使用 Rust 实现 Rust 并发：一个&amp;rsquo;消息传递&amp;rsquo; bug 的原型。 如何设计 Rust 的 Panic 弹性 GitHub Action 用于二进制箱子安装 使用 Github Action 处理 Rust 膨胀 Rust 和 WebAssembly：多人棋盘游戏 我对 unsafe {} 感到不舒服 SIMD 库计划 加快 Rust 编译时间的技巧 Rust Analyzer Changelog ＃30 Rust 和 Substrate 构建区块链：针对开发人员的循序渐进指南 Dart and Rust：一篇异步故事 解码一份证书 OneSignal：Rust 四年 Rust 是如何让我们监控每分钟 30k API 调用 如何在 Rust 中使用 C ++ 多态性 在 Rust 中实现类型安全的 printf 面向 Node 开发人员的 Rust 简介 想要从危险代码手中，拯救世界的编程语言 使用 Proptest 在 Rust 中，进行基于属性的测试 CNCF : 使用 Rust Rust 的庞大编译单元 RustHorn：Rust 程序的基于 CHC 的验证 发行不会崩坏的 Linux 二进制文件 Struct 中，Rust Lifetimes 的一些示例 x86_64-unknown-linux-musl Target 的 Static PIE 和 ASLR 三个字节，为一个整数 使用 Rust，删除 Gitignored 杂物 Rust 之旅 —— 第 8 章 —— 智能指针 线程本地存储 —— 制作自己的可执行打包程序 P.</description>
    </item>
    
    <item>
      <title>Rust周报 343(译)</title>
      <link>/2020/06/17/rust%E5%91%A8%E6%8A%A5-343%E8%AF%91/</link>
      <pubDate>Wed, 17 Jun 2020 22:10:45 +0800</pubDate>
      
      <guid>/2020/06/17/rust%E5%91%A8%E6%8A%A5-343%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-06-16 原文：343 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
看看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  2020 年大事件 —— 更新 nightly 版本现提供新的 inline 汇编语法 宣布 RustFest Global 2020🎉 RustConf 2020 注册已开放 了解 Rust 生态系统 您想学习 Rust，但不知道从哪里开始 7 种强大的 Rust 驱动的命令行实用程序 Rust 驱动的命令行实用程序可提高您的生产率 Rust 中的 Errors：一次深入研究 Hyper 陷阱 STM32 Nucleo-F302R8 和 Rust 入门 微软：Rust 是安全系统编程行业的“最佳机会” Rust 之旅：第 7 章 —— 面向对象的编程 Rust Analyzer Changelog ＃29 Rustls 安全回顾和审核报告 NDArray 索引数组和 Mask 索引数组 Ringbahn 的两个内存错误 Dart 遇见 Rust：天堂造的干柴烈火 C++ 开发者学习 Rust！ 装满水的容器 Rust 中的泛型和编译时 借助 Rust：改善您的 Phoenix 应用程序全栈的性能 改进 IDE for Rust / WinRT  我在 Rust 开源项目中的经验 Rust 玩代号 将你的好奇之心落于 Rust  Rust 编译器并不慢!</description>
    </item>
    
    <item>
      <title>Rust周报 342(译)</title>
      <link>/2020/06/12/rust%E5%91%A8%E6%8A%A5-342%E8%AF%91/</link>
      <pubDate>Fri, 12 Jun 2020 17:25:40 +0800</pubDate>
      
      <guid>/2020/06/12/rust%E5%91%A8%E6%8A%A5-342%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-06-10 原文：342 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
看看本周的 This Week in Rust Podcast
Rust 社区的更新 新闻和博客文章  宣布 Rust 1.44.0 RustConf 2020 注册已开放 Rust 使用 Win32 API，枚举监视器（monitors） Rust cli 应用程序与 slack 集成 Hack week：Rust miniCouchDB 从零到生产#1：工具链、IDEs、CI 从 Rust 到 Svelte，我会用什么技术 Rust 的 图和树遍历 编程语言：Rust 首次进入 20 强流行排行榜 Rust SentencePiece 实现 在 C 中，我错过的 Rust 那么，微软（以及其他所有人）对 Rust 的热爱到底是怎么回事呢？ 为什么使用 Rust 的开发人员如此喜欢它 Rust 尾调用优化的故事 Result, Option, unwrap 和 ?</description>
    </item>
    
    <item>
      <title>Rust周报 341(译)</title>
      <link>/2020/06/05/rust%E5%91%A8%E6%8A%A5-341%E8%AF%91/</link>
      <pubDate>Fri, 05 Jun 2020 13:26:58 +0800</pubDate>
      
      <guid>/2020/06/05/rust%E5%91%A8%E6%8A%A5-341%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-06-02 原文：341 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
本周没有 This Week in Rust 播客，下周的节目将涵盖本周和下周。
我们与你一起 自从我们上一期报道以来，关于美国民权话语的新闻很多，这是由明尼阿波利斯警察局的一名警察杀害 George Floyd 引起的。我们与黑人社区，我们的黑人兄弟姐妹，不管是现在还是以后都永远站在一起。
我们认为，这不是政治立场的站位问题，而是基本人权和平等的重大问题。
我们相信，Rustaceans 不管对社区，还是世界其他地方，都是负有责任义务 —— 确保人们都感到舒适和受到欢迎，不管他们来自哪里。在我们自己的社区，《Rust 行为准则》明确规定，我们打算让每个人都感到安全，但这份热心不应只适用于我们。
正如我们支持 Rustaceans 一样，我们也赞成人类是一个整体。而现在正是这个社会时代前进的时候了。我们支持那些冒着自身危险，支持 George Floyd, Breonna Taylor, Ahmaud Aubery，以及所有在警察手中面临不公正待遇的人。我们与抗议者站在一起，希望世界变得更好。
如果你想表达你的支持，这是一个资源管理网站. 我们鼓励你们大声说出来，因为多一个声音，就更接近一个更美好的世界。
Rust 社区的更新 新闻和博客文章  RustConf 2020 注册已开放 2020 年贡献者调查 回顾 2018 年 rust-lang.org 网站重新设计 Rust Disaasembly（逆汇编）：第 1 部分 模糊测试 Sequoia-PGP 异步世界中的 Mutex Diesel 中的自定义类型 Rust 中新指令集的自动向量化 飞行控制器内，Embedded Rust 的现状 （模拟鸟群）三维 boids 在完美的协调中游动；在 Rust 中实现 boids 群集算法 Coverage Marks Ringbahn：一种安全、符合人体工程学的 Rust IO-使用 API rust-analyzer changelog #26 作为一名 Java 程序员，我为什么喜欢学习 Rust 助力 to Rust 查看用于 WebAssembly 的关键 Rust 箱子 10 种最受欢迎的编程语言：Rust、TypeScript 等 用 Rust 创造一颗红宝石（Ruby Gem） 设计 Rust release API 客户端 如何用 Rust 构建一个 WebSocket 服务器 在分布式游戏对象上，调用函数 IPv6 与 Rust Rust 可是一种高级语言 Rust 中的排序算法 Programming Servo：集成流 To Rust or not to Rust（仿 To Be or not to Be） [西班牙语] aprende rust en español [视频] 一个 rust &amp;amp; wasm tutorial 构建比特币 bitcoin 基础设施.</description>
    </item>
    
    <item>
      <title>Rust周报 340(译)</title>
      <link>/2020/05/29/rust%E5%91%A8%E6%8A%A5-340%E8%AF%91/</link>
      <pubDate>Fri, 29 May 2020 00:25:48 +0800</pubDate>
      
      <guid>/2020/05/29/rust%E5%91%A8%E6%8A%A5-340%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-05-27 原文：340 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
查看这周的 This Week in Rust Podcast 
Rust 社区的更新 新闻和博客文章  为 Windows 98 SE 及更高版本，编译 Rust 二进制文件：一段旅程 从零到生产＃0：前言 一些使用 Rust 的大型项目 在 Rust 代码中编写 Python —— 第 4 部分 用 Rust 绘制 SVG 图形 设计 Rust Unleash API 客户端 用 Rust 编写， NES 上 Conway&amp;rsquo;s Game of Life 如何组织 Rust 测试 Just：我如何组织大型 Rust 计划 将 Qt 事件集成到 Actix 和 Rust 中 Docker 中的 Actix-Web：如何构建小型且安全的镜像(images) Angular，Rust，WebAssembly，Node.</description>
    </item>
    
    <item>
      <title>Rust周报 339(译)</title>
      <link>/2020/05/22/rust%E5%91%A8%E6%8A%A5-339%E8%AF%91/</link>
      <pubDate>Fri, 22 May 2020 00:24:54 +0800</pubDate>
      
      <guid>/2020/05/22/rust%E5%91%A8%E6%8A%A5-339%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-05-19 原文：339 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
号外号外，从现在起，还有每周一次，Rust 播客（This Week in Rust Podcast —— 重点介绍每期的一些故事。您可以在Rustacean 站了解首播。
Rust 社区的更新 新闻和博客文章  走过五年的 Rust 2020 年的结构化和处理错误 充分利用 Rust 的自动向量化（Auto-Vectorization） Rust - Web 路由的状态 使用 GitHub Actions 服务单个和多个 targets - Rust releases 通过构建微型 Markdown 编译器，开始 Rust 的开发 Parcel and Rust：WASM Romcom 使用 Raspberry Pi GPIO，Rust 读取温度传感器 Rust Analyzer —— 未来几年 FFI 中的 Rust 闭包 将 Rust 用于汽车软件的案例 Gamedev＃4：全栈 Rust 的好处 RISC-V OS 使用 Rust 第 9 章：Block IO Rust 全球数据指南 [音频] Rust 新版本 1.</description>
    </item>
    
    <item>
      <title>Rust周报 338(译)</title>
      <link>/2020/05/16/rust%E5%91%A8%E6%8A%A5-338%E8%AF%91/</link>
      <pubDate>Sat, 16 May 2020 23:12:22 +0800</pubDate>
      
      <guid>/2020/05/16/rust%E5%91%A8%E6%8A%A5-338%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-05-12 原文：338 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  宣布 Rust 1.43.1 Rust 并发：single-writer 原则。 This Month in Rust OSDev（2020 年 4 月） 一个 no_std Rust 二进制文件 io_uring 的注意事项 no_std async/await —— 即将稳定 “try fn” - Result 的不特殊性 time_it：Rust 宏中的一个案例研究 动态样式表和 Yew Rust 异步编程的实用介绍 FFI 中的 Rust 闭包 从 Results 的迭代器中，收集(collect)许多错误(errors)。 自动何里化 Rust 函数 Rust 使用泛型， 将 bits 转换为整数 Rust Assembly 放大镜 更多 Rust 和 Load Balancer 冒险 用 Rust 移植朝鲜语词典 Rust 验证工具 系列合集- Rust 从零到生产 对 Rust-Analyzer 贡献，让我学到了&amp;hellip; Rust char 和 Go rune 有什么区别？ Rust 编写 Wayland 合成器 Rust 中的耗牛剃须条件编译（Yak shaving conditional compilation） Oxidize 全球研讨会和 CfP 公告 在 Rust 代码中编写 Python —— 第 3 部分 Rust FFI —— 构建 ASN1 编/解码器 [视频] 用 Actix 和 Juniper 构建一个简单的图形 API [视频] Named Field Init(命名字段初始化) in c, c++20, zig, rust, &amp;amp; d  周箱 这周的箱子是cargo-workspaces，用来管理您的货物工作区的 cargo 子命令。</description>
    </item>
    
    <item>
      <title>Rust周报 337(译)</title>
      <link>/2020/05/06/rust%E5%91%A8%E6%8A%A5-337%E8%AF%91/</link>
      <pubDate>Wed, 06 May 2020 14:04:33 +0800</pubDate>
      
      <guid>/2020/05/06/rust%E5%91%A8%E6%8A%A5-337%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-05-05 原文：337 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  异步采访：目前为止 Rust 多线程 HTTP / WebSocket 服务器。 用 Traits 欺骗 Rank-n 了解真实世界 Rust 程序中，内存和线程安全实践和问题 Rust 的 gRPC 入门指南 安设 Anaconda，Jupyter 和 Rust 将一个 process 远程传送到另一台计算机上！ Rust 手动存出 WASI Rust Analyzer - 更新日志 #22 IntelliJ Rust 更新日志 ＃121 Rust Type-level 编程 FullStory 实行 Rust，第 2 部分：我们的移动 SDK 的外观 关于在 Rust 中解析的注意事项 Rust 创建快速的 REST API（第 1&amp;frasl;2 部分） The Safety Boat：Kubernetes 和 Rust From Pratt to Dijkstra 学习嵌入式 Rust —— 构建 RISC-V 驱动的机器人，第 4 部分 如何编写 CRaP Rust 代码 Rust 并发：流式工作流，并带有 back-pressure 的一面。 使用 PyO3 ，在 Rust 中编写 Python 模块 创建一个健壮的，可重复使用的 Link-Checker [视频] crust of rust: 声明式宏  [视频] rust stream: string it all together!</description>
    </item>
    
    <item>
      <title>Rust周报 336(译)</title>
      <link>/2020/05/03/rust%E5%91%A8%E6%8A%A5-336%E8%AF%91/</link>
      <pubDate>Sun, 03 May 2020 10:53:35 +0800</pubDate>
      
      <guid>/2020/05/03/rust%E5%91%A8%E6%8A%A5-336%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-04-28 原文：336 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.43.0。🎉🎈 2020 年，Rust 编译器的加速计划。 体验 Firefox 中的 WebGPU。 使用 Rust 和 AWS Lambda 进行数据提取。 嵌入式 Rust pattern —— zero sized references(零大小引用)。 Rust 实现线性四叉树。 tagged union 的内存有效序列化。 Unpacking Serde。 [视频] rust stream: ownership, closures, and threads (所有权，闭包和线程)- oh my。 [视频] Crust of Rust：生命周期注释。 对 Rust 和 WebAssembly 的第一印象。 从 Rust 到 WebAssembly：使用 Actix ＆ Yew 构建 交互式笔记 网络应用程序。 Rust 的 future：内部执行过程。 Rust 并发：五个简单的部分。 （几乎）无锁 stream buffering。 Rust 和 Node.</description>
    </item>
    
    <item>
      <title>Rust周报 335(译)</title>
      <link>/2020/04/23/rust%E5%91%A8%E6%8A%A5-335%E8%AF%91/</link>
      <pubDate>Thu, 23 Apr 2020 21:35:11 +0800</pubDate>
      
      <guid>/2020/04/23/rust%E5%91%A8%E6%8A%A5-335%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-04-21 原文：335 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust 2019 调研结果。 在 Dropbox 上，测试 sync。 用 Rust 为 Raspberry Pi 编写，操作系统。 Wired Logic —— 在浏览器上，运行的基于像素的数字电路模拟器（Rust 编译为 WASM）。 更好的 Firefox stack fixing。 在 Rust 代码内，编写 Python —— 第 1 部分。 网络上的 wgpu-rs。 从头开始构建 Rust Web 浏览器。 从 Pratt 到 Dijkstra。 Rust 技巧和窍门。 使用类型擦除(type-erased)的数据结构进行的实验。 如何编写 CRaP Rust 代码。 gfx-hal 简介 —— 第 3 部分：Vertex buffers。 我如何对 LastPass CLI 工具进行逆工程。 开放源码的 dotenv-linter：快如闪电的工具，可以整理您的 .</description>
    </item>
    
    <item>
      <title>Rust周报 334(译)</title>
      <link>/2020/04/15/rust%E5%91%A8%E6%8A%A5-334%E8%AF%91/</link>
      <pubDate>Wed, 15 Apr 2020 20:16:42 +0800</pubDate>
      
      <guid>/2020/04/15/rust%E5%91%A8%E6%8A%A5-334%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-04-14 原文：334 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust 多久变一次？ Ok-wrapping，try 代码块，和函数级别的 try 之间的区别。 围绕于 Ok-wrapping 的心理模型。 Rust 的效能问题。 库化和 Rust 分析。 一个可能的 Rust 新后端。 简单，但功能强大的 Pratt 解析。 Ruma is dead, long live Ruma。 Programming Servo：我自己的私有运行时。 Hyper 陷阱。 在 crates.io 上，下载所有箱子。 Kubernetes：Rust 般的友谊。 可容错的 Iterator Adapters。 字符串之上的类型：Rust 中的可扩展架构。 [pdf] LLHD: Rust 已在驱动，硬件设计语言的研究。 rust-analyzer changelog 20。 IntelliJ Rust 更新日志 120。 新的 sysinfo 版本：处理磁盘使用情况。 四月 lang 团队设计会议。  周箱 这周的箱子是sudo，一个使您的程序以 root 运行的库。</description>
    </item>
    
    <item>
      <title>Rust周报 333(译)</title>
      <link>/2020/04/10/rust%E5%91%A8%E6%8A%A5-333%E8%AF%91/</link>
      <pubDate>Fri, 10 Apr 2020 20:19:44 +0800</pubDate>
      
      <guid>/2020/04/10/rust%E5%91%A8%E6%8A%A5-333%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-04-07 原文：333 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  为什么我要建立一个新的 async runtime。 200 行 Rust 代码， 为你解释 Futures。 Sled：对&amp;rsquo;准确性至关重要&amp;rsquo;的 Rust 项目中的错误处理。 对 rust-clippy 最常忽视的 lints，降级或删除。 Ok-Wrapping 的道歉小文。 rust 错误处理库：从 failure 到 Fehler。 嵌入式 WG 的 树莓派 OS 开发教程：教程 14 - 异常部分 2：外设 IRQ。 贡献 Rust：九个补丁。 Inside Rust：GitHub Actions 执行流程的更新。 Programming Servo：为您服务的 Workers。 Iced，一个跨平台的 GUI 库：新版本具有自定义样式，事件订阅，其他小部件，新示例等。 rust-analyzer changelog 19。 rustsim 10 月 —— 2020 年 3 月。 Rust GameDev 月刊 第 8 期 —— 2020 年 3 月。  周箱 这周的箱子是explaine.</description>
    </item>
    
    <item>
      <title>Rust周报 332(译)</title>
      <link>/2020/04/04/rust%E5%91%A8%E6%8A%A5-332%E8%AF%91/</link>
      <pubDate>Sat, 04 Apr 2020 22:15:50 +0800</pubDate>
      
      <guid>/2020/04/04/rust%E5%91%A8%E6%8A%A5-332%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-03-31 原文：332 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust 编写 OS：async/await。 rustc-dev-guide 概述。 Tokio：通过自动协作任务生成，来减少尾延迟。 介绍 R2，Rust 路由器。 Goodbye, docs team。 Traits 工作组 2020 冲刺-1 总结。 Specs 和 Legion，两种非常不同的 ECS 方法。 减少 librsvg 中的内存消耗，第 4 部分：Bézier 路径的紧凑内存模型。 Rust 中的状态机。 宏 vs 重命名。 Rust 模式匹配的更高级方面。 什么构成一个漏洞？ 关于泛型和关联类型。 rust-analyzer changelog 18。 IntelliJ Rust 更新日志 119。 Rust in blockchain 10。  周箱 这周的箱子是async-recursion，这是一个允许在异步函数中，递归的一个宏。
谢谢Zicklag的建议！
提交下周的建议和投票！</description>
    </item>
    
    <item>
      <title>Rust周报 331(译)</title>
      <link>/2020/03/27/rust%E5%91%A8%E6%8A%A5-331%E8%AF%91/</link>
      <pubDate>Fri, 27 Mar 2020 11:26:39 +0800</pubDate>
      
      <guid>/2020/03/27/rust%E5%91%A8%E6%8A%A5-331%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-03-24 原文：331 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  regex 箱子未来计划。 Tokio 基于 intrusive lists 的新内部信号量。 Rust async 和糟糕，可怕，不好，非常坏的一天。 C++20 和 Rust：静态 Vs 动态泛型 。 快速简单的 Rust interner。 安全 Rust 准则。 我如何构建我的应用程序（使用 Rust 和其他语言）。 备忘单：Option（ Rust ）与 Maybe（ Haskell ）。 两年 Rust。 减少 librsvg 中的内存消耗，第 3 部分：slack space in Bézier paths。 用被诅咒的 Rust，激起神的愤怒。 让我们编写一个 Web Assembly 解释器（第 1 部分）。 NDArray 的描述性统计。 rust-analyzer 变更日志＃17。 宣布 Tokei 11：现在速度提高 40–60％。 学习 Rust：构建玩具 JIRA 克隆。 Rust logo 的原始概念。  周箱 这周的箱子是flume，一个快速的多生产者;单消费者;通道。</description>
    </item>
    
    <item>
      <title>Rust周报 330(译)</title>
      <link>/2020/03/20/rust%E5%91%A8%E6%8A%A5-330%E8%AF%91/</link>
      <pubDate>Fri, 20 Mar 2020 11:39:31 +0800</pubDate>
      
      <guid>/2020/03/20/rust%E5%91%A8%E6%8A%A5-330%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-03-17 原文：330 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.42.0。🎉🎈 ripgrep 12 发布。 在 Dropbox 重写我们同步引擎的核心。 docs.rs 现在允许您选择 build targets。 Redox OS —— pkgar 简介。 减小Option&amp;lt;T&amp;gt;尺寸，这通过将成员添加到T完成？ 开箱即用的动态调度。 parallel-stream。 优化，没有或有？ Rust All Hands 回顾展。 如何编写 Rust 箱子文档的指南。 C＃程序员检查 Rust —— 第 2 部分。 Traits，动态调度和 upcasting。 Rust 引用。 Rust pt 解析库 第 2 部分 —— 测试实用程序。 将数据集从 CSV 加载到 NDArray。 宣布 Rust Search Extension v0.</description>
    </item>
    
    <item>
      <title>Rust周报 329(译)</title>
      <link>/2020/03/13/rust%E5%91%A8%E6%8A%A5-329%E8%AF%91/</link>
      <pubDate>Fri, 13 Mar 2020 11:19:14 +0800</pubDate>
      
      <guid>/2020/03/13/rust%E5%91%A8%E6%8A%A5-329%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-03-10 原文：329 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  builder pattern 的替代方法，初始化结构模式。 Bottlerocket 是一种新的基于 Linux 的操作系统，几乎将所有新组件都使用了 Rust。 Rust pt 解析库 P1。 是的，我还在学习 Rust。 我刚刚为 rust-analyzer 做出了第一个开源贡献。 Nannou 更新 —— WebGPU，捕获帧等。 C＃程序员调查 Rust —— 第 1 部分。 我对 Rust 和.NET 的探索。 cfg(doctest)是稳定的，你应该使用它。 ExpressJS 与 Actix-Web：性能和运行成本比较。 rust-analyzer changelog 15。 本月 Rust gamedev 7 —— 2020 年 2 月。 2020 RustConf CFP 现已开放。  周箱 这周的箱子是plotly，plotly.</description>
    </item>
    
    <item>
      <title>Rust周报 328(译)</title>
      <link>/2020/03/13/rust%E5%91%A8%E6%8A%A5-328%E8%AF%91/</link>
      <pubDate>Fri, 13 Mar 2020 11:18:20 +0800</pubDate>
      
      <guid>/2020/03/13/rust%E5%91%A8%E6%8A%A5-328%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-03-03 原文：328 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  宣布 Rust 1.41.1。 半小时 Rust。 最近和将来的 pattern matching 改进。 高性能 Rust 的易技巧。 了解 Rust 中的 String 和＆str。 caniuse.rs - Rust feature 搜索。 在嵌入式 Rust 上的 async/await 。 RustCrypto aes-gcm和chacha20poly1305箱子，由 NCC 组审核。 FFI patterns ＃1 - 复杂的 Rust 数据结构，无缝地公开给 C ++。 多维数组，和 NDArray 的操作。 探索 Rust，使用中断处理程序实现和共享数据的方法。 使用 Rust 将 JavaScript 应用程序移植到 WebAssembly（第 3 部分）。 Pietro Albini 已加入核心团队。 宣布首次 FFI-unwind 项目设计会议。 Rust 编写操作系统：2020 年 2 月更新。 rust-analyzerChangelog 14。 IntelliJ Rust 更新日志 117。 本月 rustsim , 9。 Rust 区块链时讯 9：在家工作的月份。 Tokio v0.</description>
    </item>
    
    <item>
      <title>Rust周报 327(译)</title>
      <link>/2020/02/28/rust%E5%91%A8%E6%8A%A5-327%E8%AF%91/</link>
      <pubDate>Fri, 28 Feb 2020 11:11:08 +0800</pubDate>
      
      <guid>/2020/02/28/rust%E5%91%A8%E6%8A%A5-327%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-02-25 原文：327 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  使用 Rust String。 Rust / WinRT 即将推出。 rustc 的自我分析器简介。 crates.io 2020-02-20 事件报告。 命令行：过滤重复项：比 sort | uniq 快 30 倍。 制作我们自己的可执行打包器。 Ramer–Douglas–Peucker 算法 —— 将曲线近似表示为一系列点，并减少点的数量的一种算法。 异步 HTTP。 关于异步/等待的进一步思考。 Rust 团队按比例分流。 介绍，图像处理服务 Dali。 宣布 async_executors，这是 executor agnostic 库的构建块。 使用 vgtk 构建 TodoMVC。 在 github 页面或其他页面上，托管 Rust + Wasm 项目。 Programming Servo：实现 BroadcastChannel。 Fuchsia 编程语言政策。 rust-analyzer changelog 113。  周箱 这周的箱子是wundergraph，一个 GraphQL 接口库；和kibi，千行 Rust 的文本编辑器。</description>
    </item>
    
    <item>
      <title>2019Rust图形库之路(译) —— ggez 作者</title>
      <link>/2020/02/24/2019rust%E5%9B%BE%E5%BD%A2%E5%BA%93%E4%B9%8B%E8%B7%AF%E8%AF%91-ggez-%E4%BD%9C%E8%80%85/</link>
      <pubDate>Mon, 24 Feb 2020 15:00:04 +0800</pubDate>
      
      <guid>/2020/02/24/2019rust%E5%9B%BE%E5%BD%A2%E5%BA%93%E4%B9%8B%E8%B7%AF%E8%AF%91-ggez-%E4%BD%9C%E8%80%85/</guid>
      <description>2019 Rust 图形库之路  Rust 图形库指南 介绍 到底事情是怎么的  OpenGL DirectX Vulkan Metal  真真真 Rust! 好了，你是 gfx 粉丝仔，那其他的呢  glium luminance ash vulkano rendy  未来在继续书写 (in Rust) 所以，我要用什么，让一个三角形图出现在屏幕上呢？ 附录: 游戏框架  Rust 图形库指南 截至 2019 年 5 月。
介绍 因为，在Unofficial Rust Discord的游戏开发频道上，大家在谈论图形 API 的问题，哪个到了什么地步以及做什么的，人们相互争执和相互纠正，&amp;rdquo;雨水来得过于猛烈&amp;rdquo;，一切的一切都变得有些模糊，混乱。所以在这里，我准备 尝试 捋一捋记录。本文旨在为希望使用 Rust，编写图形东西（视频游戏，动画，炫酷的可视化等）的人，但又不知道他们应从哪里开始，提供些背景知识。
你为什么要相信我？因为我需要知道这些东西才能选择ggez的伙伴，所以最近几年我一直在关注事物的状态。而且因为我对这些东西真的很感兴趣; 而且因为我喜欢写作。就说，虽然我远不是专家，但更像是一个兴致勃勃的观察家。
但是，在深入研究 Rust 细节之前，让我们先了解一下图形 API 的奇妙世界……
到底事情是怎么的 没有人直接为 GPU 编写代码。硬件接口，指令集以及它们实际工作方式的细节受到制造商的严密保护，好吧，除了三个主要制造商中的两位 —— 现在开源了（大部分）驱动程序。因此，实际上只剩下 NVidia 是锁源的。GPU 硬件可以快速发展，而不必担心向后兼容性，但最近十年左右，看起来 GPU 和 CPU 相互通信的基本设计和折衷方法已经达到了更稳定的状态。Anyway，不管实际原因，操作系统的 GPU 驱动程序会与硬件进行所有对话，并为（可以是你写的）程序提供与之对话的 API。实际上，有很多这样的 API，您以前可能已经听说过其中一些，所以让我们来看看明星选手：</description>
    </item>
    
    <item>
      <title>Rust周报 326(译)</title>
      <link>/2020/02/21/rust%E5%91%A8%E6%8A%A5-326%E8%AF%91/</link>
      <pubDate>Fri, 21 Feb 2020 14:51:57 +0800</pubDate>
      
      <guid>/2020/02/21/rust%E5%91%A8%E6%8A%A5-326%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-02-18 原文：326 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Sealed Rust 更新：Rust 安全为重计划。 为什么 Rust 是最受欢迎的编程语言？ Rust ghost，signing off。 我审核了异步 RwLock 的 3 种不同实现。 deny(warnings) is 相当有害。 Rust for Java devs。 Rust，未定义行为的一些细微差别。 一个务实的方法，to 全局状态 Rust 中的图形：GraphCore 简介。 faux - 内部的样子 rust-analyzer changelog 12。 IntelliJ Rust changelog 116。 Rust GameDev 月刊 6 -2020 年 1 月。  周箱 这周的箱子是pointer-utils，一个用于处理指针的小型库，以及jlrs，一个箱子可以从 Rust 调用Julia。
谢谢Vikrant的建议！
提交下周的建议和投票！</description>
    </item>
    
    <item>
      <title>Rust周报 325(译)</title>
      <link>/2020/02/14/rust%E5%91%A8%E6%8A%A5-325%E8%AF%91/</link>
      <pubDate>Fri, 14 Feb 2020 11:34:24 +0800</pubDate>
      
      <guid>/2020/02/14/rust%E5%91%A8%E6%8A%A5-325%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-02-11 原文：325 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Alex Crichton：减少我对 Rust 的参与。 将 async/await 引入 embedded Rust。 宣布: the Cleanup Crew ICE-breaker 小组。 Rust 游戏开发生态系统调查的结果。 Rusoto 的 std::future::Future。 在 VSCode 中，调试 Rust（2020 年）。 从 React 的角度，来看 Rust 和 GTK。 Rust 异步入门。 解决 Rust 中的 sparse matrix 系统。 我做了一件事情：Markedit。 创建交互式应用程序。 异步采访 6：Eliza Weisman。 rust-analyzer changelog 11。  周箱 这周的箱子是argh，是 Rust 的一个有主见的参数解析小库。
谢谢Vikrant的建议！</description>
    </item>
    
    <item>
      <title>Rust游戏开发2020生态圈展望 调查结果(译)</title>
      <link>/2020/02/08/rust%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912020%E7%94%9F%E6%80%81%E5%9C%88%E5%B1%95%E6%9C%9B-%E8%B0%83%E6%9F%A5%E7%BB%93%E6%9E%9C%E8%AF%91/</link>
      <pubDate>Sat, 08 Feb 2020 13:44:16 +0800</pubDate>
      
      <guid>/2020/02/08/rust%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912020%E7%94%9F%E6%80%81%E5%9C%88%E5%B1%95%E6%9C%9B-%E8%B0%83%E6%9F%A5%E7%BB%93%E6%9E%9C%E8%AF%91/</guid>
      <description>Rust Game Development - Ecosystem Survey 2020 年 2 月 6 日
去年 8 月，我们对 Rust gamedev 生态圈进行了一次调查。在不幸的耽搁之后，我们终于可以交出结果了。我们收到了高达 403 个回复！这些宝贵的反馈将为工作组 2020 年的路线图提供动力。
 爱好者 or 开发者?  游戏开发你会用 Rust 吗?   如今, 挡在 Rust 游戏开发与你之间的最大阻力是什么?  Ecosystem 成熟 (114)  迭代用时 (68)  文档 (43)  缺乏完整功能的引擎 (35)  Rust 学习曲线 / 入门到小众语言 (29)  IDE/RLS story (28)  GUI 工具 (23)  游戏主机 (13)  Web/mobile 支持 (14)  Allocators (10)  C++ interop (7)   如今, 系在 Rust 游戏开发与你之间最亮眼的红线是什么?</description>
    </item>
    
    <item>
      <title>Rust周报 324(译)</title>
      <link>/2020/02/07/rust%E5%91%A8%E6%8A%A5-324%E8%AF%91/</link>
      <pubDate>Fri, 07 Feb 2020 13:57:05 +0800</pubDate>
      
      <guid>/2020/02/07/rust%E5%91%A8%E6%8A%A5-324%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-02-04 原文：324 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.41.0。🎉🎈 为什么 Discord，从 Go 切换到 Rust。 Rust 编写操作系统：2020 年 1 月更新。 用 Rust 测量钢琴键的 space-time 行为。 建立自己的 executor。 针对 Raspberry Pi，在 Linux 上交叉编译 Rust。 2020 Rust 活动主线。 使用 Bastion 编写 AWS Lambda 函数。 rust-search-extension：在浏览器的地址栏中，搜索标准文档，箱子，错误代码和属性。 嵌入式工作组的新闻咨询 23。 Rust Analyzer 变更日志 10。 IntelliJ Rust 更新日志 115。 Rust 区块链新闻 8：展望 2020。 宣布 async-std v1.5.0。 宣布 Tide 0.</description>
    </item>
    
    <item>
      <title>Rust周报 323(译)</title>
      <link>/2020/01/30/rust%E5%91%A8%E6%8A%A5-323%E8%AF%91/</link>
      <pubDate>Thu, 30 Jan 2020 23:14:57 +0800</pubDate>
      
      <guid>/2020/01/30/rust%E5%91%A8%E6%8A%A5-323%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-01-28 原文：323 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  cargo-audit v0.11：介绍fix功能，箱子检测，更多功能。 Bitfields forever：为什么需要兼容 C 的 Rust 箱子。 Rust 中，具有改进类型的测量单元。 std.rs：直接访问稳定的 rust docs。 100 LoC 以下的，无堆栈 Rust 协程库。 Zebra 如何使用 Tower 用现代的 async Rust 代替 Zcash 的旧比特币 C ++网络代码。 建立你自己的block_on()。 为 Debian 打包一个 Rust 项目。 Byte 有序型 streams。 Tide channels。 将库更新为 std::future 的经验教训。 返回 trait 对象。 在 Raspberry Pi 上，为 PineTime 调试 Rust + Mynewt 固件。 rust-analyzer changelog 9。  周箱 这周的箱子是test-case，用于参数化测试的框架。</description>
    </item>
    
    <item>
      <title>Rust周报 322(译)</title>
      <link>/2020/01/23/rust%E5%91%A8%E6%8A%A5-322%E8%AF%91/</link>
      <pubDate>Thu, 23 Jan 2020 21:50:07 +0800</pubDate>
      
      <guid>/2020/01/23/rust%E5%91%A8%E6%8A%A5-322%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-01-21 原文：322 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  烟雾测试(Smoke-testing) Rust HTTP 客户端。 Rust 伤心的一天。 什么是 Rust，为什么如此受欢迎 —— 来自官方 StackOverflow 博客。 Rust 编写操作系统：分配器设计。 如何重构宏，将我的 Rust 项目的编译时间从 4 小时减少到 40 秒。 为什么高级 slice 模式的稳定，对我来说很重要。 如何编写快速的 Rust 代码。 公开 C 和 Rust API：librsvg 的一些想法。 ESP32 上的 Rust —— SVD，PAC 和 USB 闪存。 Epoll，Kqueue 和 IOCP 用 Rust 进行了解释。 Servo 编程：三年，100 次 commits。 Verona 计划：Microsoft 受 Rust 启发的研究语言，已经发布。  周箱 这周的箱子是fasteval，用于快速，安全地执行代数表达式的箱子。</description>
    </item>
    
    <item>
      <title>Rust GameDev 月刊 #5(译)</title>
      <link>/2020/01/22/rust-gamedev-%E6%9C%88%E5%88%8A-5%E8%AF%91/</link>
      <pubDate>Wed, 22 Jan 2020 09:59:00 +0800</pubDate>
      
      <guid>/2020/01/22/rust-gamedev-%E6%9C%88%E5%88%8A-5%E8%AF%91/</guid>
      <description>This Month in Rust GameDev #5 - December 2019 2020 年 1 月 10 日
欢迎来到 Rust GameDev 工作组的第五期月刊。
Rust是一种追求三重性的系统语言：安全性、并发性和速度。这些目标与游戏开发非常一致。
我们希望为想在开发过程中，使用 Rust 的人建立一个吸引人的生态系统！想参与吗？加入 Rust GameDev working group!
想要加入下一期新闻？Send us a pull request 随意发送有关您自己的项目的 PR。
演讲呼吁: Rust GameDev 伦敦站 #  我是Rust London的社区领导，我只想为任何一个在伦敦的人做些调查，想在我们的 Rust 伦敦站上做个演讲。我们想举办一个专门针对 GameDev 的 LDN 会谈。
 详细信息看这里.
Game Updates # A/B Street - Adjust Traffic Patterns in Real Cities # 曾经坐在交通堵塞的公交车上，想知道为什么会有车停在路上，而不是公交专用道上？A/B Street这是一个探索道路空间和交通信号的微小变化，如何影响司机、骑自行车者、公交用户和行人的移动的游戏。游戏使用OpenStreetMap和其他公共数据集，让玩家调整现有的基础设施，然后做一个详细的比较，看看谁的变化有帮助/伤害。
A/B Street 是用 Rust 编写的，在glium之上，使用自定义 GUI 库。</description>
    </item>
    
    <item>
      <title>Rust GameDev 月刊 #4(译)</title>
      <link>/2020/01/22/rust-gamedev-%E6%9C%88%E5%88%8A-4%E8%AF%91/</link>
      <pubDate>Wed, 22 Jan 2020 09:58:47 +0800</pubDate>
      
      <guid>/2020/01/22/rust-gamedev-%E6%9C%88%E5%88%8A-4%E8%AF%91/</guid>
      <description>This Month in Rust GameDev #4 - 11 月 2019 2019-12-08
Rust是一种追求三重性的系统语言：安全性、并发性和速度。这些目标与游戏开发非常一致。
我们希望为想在开发过程中，使用 Rust 的人建立一个吸引人的生态系统！想参与吗？加入 Rust GameDev working group!
想要加入下一期新闻？Send us a pull request 随意发送有关您自己的项目的 PR。
Game Updates # Le Train Dispatcher - Route Trains in 模拟铁路网络 # Le Train Dispatcher！itch.io，Patreon 允许你在完全模拟的铁路网络中，对火车进行路线选择。特别注意了光信号的实际管理（block 系统，开关保护），列车物理特性和弯道追踪。
该游戏使用 Rust 编程，主要使用的箱子是：ggez，imgui 和 serde。
这第一个版本完全可玩，但是如果您想发表评论，提出您的想法或为游戏的发展做出贡献，请不要犹豫地发布一个message。
独特的特点：
 逼真的灯光信号模拟：已经进行了大量的工程工作，来对铁路信号进行逼真的管理。 没有碰撞：是的，放手，看到许多火车自动行驶，这很有趣。你的所有行为都要检查：不能将火车置于危险之中。 真实物理学  每个机车或货车都有其自身的重量，驱动力或制动力，和其粘连系数。 这些弯道不是简单的圆，它们的计算公式与实际道路或铁路网络中，使用的方程相同。   Veloren # Veloren是一个开放世界，开放源代码的多人体素 RPG。该游戏尚处于开发初期，但可以玩。
11 月的一些更新：
 主存储库达到 50,000 行代码（根据Tokei）; Airshipper launcher 明显改善； 游戏设计工作组成立； 改进了身份验证，玩家创建界面，资产压缩，故事和配乐； CI 升级，大量错误修正和内容升级。  完整的每周开发日志“本周在 Veloren &amp;hellip;”：#40，#41，#42，#43。</description>
    </item>
    
    <item>
      <title>Rust GameDev 月刊 #3(译)</title>
      <link>/2020/01/21/rust-gamedev-%E6%9C%88%E5%88%8A-3%E8%AF%91/</link>
      <pubDate>Tue, 21 Jan 2020 12:38:01 +0800</pubDate>
      
      <guid>/2020/01/21/rust-gamedev-%E6%9C%88%E5%88%8A-3%E8%AF%91/</guid>
      <description>Rust GameDev #3 月刊 - 10 月 2019  2019 年 11 月 7 日
欢迎来到 Rust GameDev 工作组月刊，第三期。
Rust是一种追求三重性的系统语言：安全性、并发性和速度。这些目标与游戏开发非常一致。
我们希望为想在开发过程中，使用 Rust 的人建立一个吸引人的生态系统！想参与吗？加入 Rust GameDev working group!
游戏更新 # Sulis - a Turn-Based RPG # Sulis是一款角色扮演游戏（RPG），具有回合制、战略战斗、深度角色定制和引人入胜的故事情节。游戏从一开始，就以改造和定制的内容角度，进行考虑。当前支持 Windows 和 Linux 平台。
该游戏目前是完全可玩的，包括 the first act of Twin Expanse，一个经典游戏类似的老式 RPG 战役，如*巴尔杜尔之门*，但混合了现代元素，如*神界原罪*和*永恒之柱*。
核心游戏引擎以及战役仍在大力开发中。鼓励用户给出 bugs issues，功能请求或任何其他反馈。
特征：
 跨平台原生二进制文件，当前构建，供给 Windows 和 Linux 多个战役，超过 8 小时的游玩时间，包括手工制作和过程内容。 一个详细和充分认知的世界和故事 —— 看看Lore page。 设计时考虑到了改造 —— 虽然在这方面还有更多的工作要做。 一个强大的二维图形引擎，可缩放，可扩展的用户界面，HiDPI 支持，和一个可交换的图形后端。 在非常温和的硬件，甚至软件渲染器上运行（尽管帧速率降低）。  GPLv3 许可证的源代码在 GitHub。Sulis 是用 Rust 编写的，脚本使用 Lua，大多数数据文件使用 YAML 格式。</description>
    </item>
    
    <item>
      <title>Rust GameDev 月刊 #2(译)</title>
      <link>/2020/01/20/rust-gamedev-%E6%9C%88%E5%88%8A-2%E8%AF%91/</link>
      <pubDate>Mon, 20 Jan 2020 13:21:58 +0800</pubDate>
      
      <guid>/2020/01/20/rust-gamedev-%E6%9C%88%E5%88%8A-2%E8%AF%91/</guid>
      <description>Rust GameDev #2 月刊 - 9 月 2019  2019-10-05
欢迎来到 Rust GameDev 工作组的月刊第二期。
Rust是一种追求三重性的系统语言：安全性、并发性和速度。这些目标与游戏开发非常一致。
我们希望为想在开发过程中，使用 Rust 的人建立一个吸引人的生态系统！想参与吗？加入 Rust GameDev working group!
游戏更新 # Veloren # Veloren是一个开放的世界，开源的多人像素 RPG。游戏处于开发的早期阶段，但可以玩。
九月的一些改进：
 完善多阶段城镇建设； 改进库存系统和角色创建； 在水、水物理、湖泊和河流方面取得了巨大进展！ 新的块数据结构； 三维地图和小地图； 第一人称观点； 弓箭； 性能优化；  新视频：&amp;ldquo;24 分钟的 Alpha Gameplay&amp;rdquo;.
完整的每周开发日志“本周在 Veloren…”：#31,#32,#33,#34,#35.
Zemeroth v0.6 # Zemeroth是一款回合制的极简 2d 战术游戏。
本月Zemeroth v0.6发布。此版本的主要功能包括：
 名望和 fighter 升级， 财产， 精灵帧和翻转， 状态效果图标。  阅读完整的 devlog post或观看the video version。
Twenty Asteroids #</description>
    </item>
    
    <item>
      <title>Rust GameDev 月刊 #1(译)</title>
      <link>/2020/01/19/rust-gamedev-%E6%9C%88%E5%88%8A-1%E8%AF%91/</link>
      <pubDate>Sun, 19 Jan 2020 10:35:38 +0800</pubDate>
      
      <guid>/2020/01/19/rust-gamedev-%E6%9C%88%E5%88%8A-1%E8%AF%91/</guid>
      <description>Rust GameDev #1 月刊 - 8 月 2019  2019 年 9 月 2 日
欢迎来到 Rust 游戏开发工作组月刊（希望如此！）的创刊号新闻稿。
Rust是一种追求三重性的系统语言：安全性、并发性和速度。这些目标与游戏开发非常一致。
我们希望为想在开发过程中，使用 Rust 的人建立一个吸引人的生态系统！想参与吗？加入 Rust GameDev working group!
新闻和博文 # the Rust GameDev Working Group 的调查问卷 📋 # 对在游戏开发中使用 Rust 感兴趣（可能已经投资了？）？请留出一点时间，来回答这个简短的调查，了解我们游戏开发生态系统的现状，以及游戏开发工作组可以做些什么，来培育它。🌱
尽管我们非常感谢您提供少量的信息，以便我们可以方便地与您联系进行进一步的讨论，但共享这些信息是可选的。这项调查中只有 3 个问题是强制性的，我们把最重要的问题留到最后。
目前正在处理问卷，以供稍后的发布。在调查结果公布并随后永久关闭之前，我们仍在接受回复。
_讨论：/r/rust,twitter_
还有，看看我们之前的帖子&amp;ldquo;欢迎 Rust Game Development Working Group&amp;rdquo;，如果你还没看到[/r/rust,twitter].
Rustsim #7 月刊 (June − July 2019) # nphysics 0.12 release 版本包含几个期待已久的功能：
 支持 colliders 的线性和非线性的*连续碰撞检测（CCD）*，在刚体和传感器。还有关于它的全新的用户手册。 刚体*速率降*：这允许人为地减慢一些物体的速度。这对于不能使用传统摩擦的自上而下二维游戏来说，是必不可少的。 刚体*最大速率*限制：有可能迫使一个刚体永远不会得到高于阈值的速度。 *自定义容器*有可能用于实体、colliders、关节和 force 生成器。这有助于克服与借用相关的一些困难，也有助于 npphysics 与其他解决方案的集成。物理世界结构将不再拥有这些容器。  与ncollide 0.</description>
    </item>
    
    <item>
      <title>Rust周报 321(译)</title>
      <link>/2020/01/16/rust%E5%91%A8%E6%8A%A5-321%E8%AF%91/</link>
      <pubDate>Thu, 16 Jan 2020 21:38:29 +0800</pubDate>
      
      <guid>/2020/01/16/rust%E5%91%A8%E6%8A%A5-321%E8%AF%91/</guid>
      <description>this-week-in-rust 日期：2020-01-14 原文：321 期  你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  虚幻引擎中的 Rust 代码。 简介- Roguelike 教程。 迈向 Rust 基础。 Way Cooler 事后剖析。 Why Rust? I have a GC！ rust-analyzer changelog 7. 本月 Rust gamedev 5- 2019 年 12 月. RDBC 正迁往 Tokio. 用 Rust 和 Z3 合成 loop-free 程序. ESP32 上，集装箱型构建 for Rust. 在 Rust 内核中，实现协同调度。  一周一箱 这个星期的箱子是cxx，一个通过顾及两面，安全构建 C++ FFI 的库。
多亏了Ehsan M.</description>
    </item>
    
    <item>
      <title>Rust周报 320(译)</title>
      <link>/2020/01/10/rust%E5%91%A8%E6%8A%A5-320%E8%AF%91/</link>
      <pubDate>Fri, 10 Jan 2020 10:26:30 +0800</pubDate>
      
      <guid>/2020/01/10/rust%E5%91%A8%E6%8A%A5-320%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2020-01-07
原文：本周 Rust(螃蟹) 320
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  将 Quake 3 转换为 Rust。 减少对 32 位 Apple 目标的支持。 学习 Rust 的危险方法：让编译器完成工作。 互斥锁(Mutexes)比自旋锁(spinlocks)更快。 在 Rust 中编写操作系统：2019 年 12 月更新。 const 泛型进度更新。 Elastic 发布正式的 Elasticsearch Rust 客户端。 异步生态系统中的 Backpressure。 解释 Rust 中的 atomics。 宣布 ÄroRust —— 非官方的，Rust + 航空航天工作组。 Rust Belt Rust 2019 的视频，现已发布。 Rust 的 Result 类型入门。  周箱 这周的箱子是sqlx，现代的 SQL 客户端库。
谢谢扬·里默（Jan Riemer）的建议！</description>
    </item>
    
    <item>
      <title>Rust周报 319(译)</title>
      <link>/2020/01/03/rust%E5%91%A8%E6%8A%A5-319%E8%AF%91/</link>
      <pubDate>Fri, 03 Jan 2020 10:42:33 +0800</pubDate>
      
      <guid>/2020/01/03/rust%E5%91%A8%E6%8A%A5-319%E8%AF%91/</guid>
      <description>a { color: #804d0f;}  本周的螃蟹行情
日期：2019-12-31
原文：本周 Rust(螃蟹) 319
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust 重写 m4vgalib。 一项思想实验：在游戏引擎之外使用 ECS 模式。 Spinlocks 被认为是有害的。 2020 年，ggez 的位置。 内部可变性模式。 Clippy 应该关心&amp;rsquo;他们&amp;rsquo;从何而来？ Rust 编写 AWS Lambda 函数。 Rust lifetimes 和 iterators。 Rocket 和多组形式。 Lyon 0.15.0- 新的 tessellator。 嵌入式 WG 的 Raspberry Pi OS 开发教程：教程 13 - 使用 QEMU 的内核单元，集成和控制台测试。 使用 Rust 和 Mynewt，优化 PineTime 的显示驱动程序。 嵌入式 WG 新闻通讯 22。 rust-analyzer changelog 5。 Rust in blockchain 7 - 2019 年 12 月。  周箱 这周的箱子是attohttpc，一个微小的同步 HTTP 客户端库。</description>
    </item>
    
    <item>
      <title>Rust周报 318(译)</title>
      <link>/2019/12/28/rust%E5%91%A8%E6%8A%A5-318%E8%AF%91/</link>
      <pubDate>Sat, 28 Dec 2019 11:40:52 +0800</pubDate>
      
      <guid>/2019/12/28/rust%E5%91%A8%E6%8A%A5-318%E8%AF%91/</guid>
      <description>a { color: #804d0f;}  本周的螃蟹行情
日期：2019-12-24
原文：本周 Rust(螃蟹) 318
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.40.0。🎉🎈 Rust 之危。 宣布 Tokio-Compat。 Haskell 和 Rust 中的 async exceptions。 actix-web v2.0 发布。 宣布正式的 MongoDB Rust 驱动程序。 JetBrains- Rustlings 课程改编。 在 Rust 中，编写 BPF 代码。 在 Rust 箱子中，测试 no_std 兼容性。 源代码链接：将 C headers 合并到 Rust 模块中。 使用 WASM 和 Cloudflare 的无服务器 Rust。 使用 Rust，将 JavaScript 应用程序移植到 WebAssembly（第 1 部分）。 深入探讨：编译的 Rust p1。 Formatting 编译器树。 Streams 并发。 在 Rust 中，写一个 seqlock。 Vishay 的 VEML6030 和 VEML7700 环境光传感器的平台驱动程序。 PCA9685 16-channel，PWM LED/servo 电机控制器驱动器。 祝贺，编译器团队成员 matthewjasper 和 wesleywiser。  周箱 这周的箱子是cargo-scout，一个 cargo 子命令，仅在箱子的更改代码上，运行 clippy（在 git diff 之后）。</description>
    </item>
    
    <item>
      <title>Rust周报 317(译)</title>
      <link>/2019/12/21/rust%E5%91%A8%E6%8A%A5-317%E8%AF%91/</link>
      <pubDate>Sat, 21 Dec 2019 11:01:11 +0800</pubDate>
      
      <guid>/2019/12/21/rust%E5%91%A8%E6%8A%A5-317%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-12-17
原文：本周 Rust(螃蟹) 317
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  用 cargo-bisect-rustc 对分 Rust 编译器 regressions。 不用再担心阻塞了：受 Go 启发的新 async-std runtime。 从零到 main()：裸机 Rust。 WASM 为抽象平台。 gtk-rs 新版本：简化以及更多功能。 宣布 Mio 0.7-alpha.1。 Rendology 简介：基于 Glium 的渲染管道。 常见的 Rust traits。 用 Rust 解决 Burger 问题。 将 druid Rust 小部件移植到 PineTime 智能手表。 Relm 教程。 为什么 Rust 似乎会启发人们？  周箱 这周的箱子是bstr，不要求是有效的 UTF-8 的， Rust 字符串类型。
谢谢威利·卡普勒的建议！
提交您下周的建议和投票！
呼吁参与 一直想为开源项目做贡献，但不知道从哪里开始？每周我们都会重点介绍 Rust 社区的一些任务，供您选择和开始！</description>
    </item>
    
    <item>
      <title>Rust周报 316(译)</title>
      <link>/2019/12/15/rust%E5%91%A8%E6%8A%A5-316%E8%AF%91/</link>
      <pubDate>Sun, 15 Dec 2019 17:01:31 +0800</pubDate>
      
      <guid>/2019/12/15/rust%E5%91%A8%E6%8A%A5-316%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-12-10
原文：本周 Rust(螃蟹) 316
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  如何在 2019 年，最后一次加速 Rust 编译器。 Formatting 对于嵌入式 Rust 来说，是不合理的昂贵。 1Password X Manager 的某些部分已用 Rust 重写。 宣布具有完整异步/等待支持的 hyper v0.13。 阻塞内部异步代码。 宣布 docs.rs 团队。 编写最慢的快速排序。 Rust 库中的健全性错误：不能与&amp;rsquo;em 一起生活，活着不能没有&amp;rsquo;em。 Rust 中 3.5 KB 的，微小 Windows 可执行文件。 Embark 内部的 Rust。 Tokio 0.2 - Rust 崩溃课程。 推广 基于 autoref 的规范。 A rusty radio：Si4703 FM 收音机 receiver 驱动程序。  ＃Rust2020 查找位于＃Rust2020 的所有帖子读 Rust。</description>
    </item>
    
    <item>
      <title>Rust周报 315(译)</title>
      <link>/2019/12/06/rust%E5%91%A8%E6%8A%A5-315%E8%AF%91/</link>
      <pubDate>Fri, 06 Dec 2019 09:55:24 +0800</pubDate>
      
      <guid>/2019/12/06/rust%E5%91%A8%E6%8A%A5-315%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-12-03
原文：本周 Rust(螃蟹) 315
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  现在默认情况下，nightly 版本进行常数传播。 Redox 操作系统：真正的硬件突破，并专注于 rustc。 使用 Rust 将 ML 投入生产：提速 25 倍。 如何 RiiR。 发起 2019 年 Rust 状况调查。 宣布 http v0.2。 用 Rust 和 async/await 实现 pid1。 潮流：现在和未来。 让我们用 Rust 语言加上 Wrap ，创建一个简单的身份验证服务器。 与 Future 融为一体 —— Rust 速成课程 8。 嵌入式 WG 新闻通讯 21。  ＃Rust2020 查找位于＃Rust2020 的所有帖子读 Rust。
周箱 这周的箱子是joinery，用于泛型字符串连接的库。
谢谢内森·韦斯特的建议！
提交您下周的建议和投票！</description>
    </item>
    
    <item>
      <title>Rust周报 314(译)</title>
      <link>/2019/11/29/rust%E5%91%A8%E6%8A%A5-314%E8%AF%91/</link>
      <pubDate>Fri, 29 Nov 2019 10:28:22 +0800</pubDate>
      
      <guid>/2019/11/29/rust%E5%91%A8%E6%8A%A5-314%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-11-26
原文：本周 Rust(螃蟹) 314
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Tokio 路线图到 1.0。 每六周运输一次编译器。 nightly rust 版本下，在常数中的if和match。 迈向，反应式 UI 的统一理论。 测量错误处理库。 将 librsvg 移植到 Rust：重构 Length 类型。 通过将 C 转换为 Rust 获得的经验教训。 在 Rust 中，是如何 panic 的。 整洁的 Rust 技巧：将 Rust 闭包传递给 C。 将 gnome-shell&amp;rsquo;s styles 移至 Rust。 Async-awaitifying 一个 Rust CLI 应用。 为 PineTime 的触摸控制器，构建 Rust 驱动程序。 RustFest Barcelona 谈话录音，现已推出。 Cryptowatch 赞助了 Rust GUI 库 iced 的开发。  ＃Rust2020 查找位于＃Rust2020 的所有帖子读 Rust。</description>
    </item>
    
    <item>
      <title>Rust周报 313(译)</title>
      <link>/2019/11/22/rust%E5%91%A8%E6%8A%A5-313%E8%AF%91/</link>
      <pubDate>Fri, 22 Nov 2019 11:47:05 +0800</pubDate>
      
      <guid>/2019/11/22/rust%E5%91%A8%E6%8A%A5-313%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-11-19
原文：本周 Rust(螃蟹) 313
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Stacked borrows：Rust 的 aliasing 模型。 使用 const 泛型，实现 ArrayVec。 关于 Rust 中，错误处理的思考。 了解 Serde。 rust-analyzer：Find 用法。 Global executors。 Rust 基础架构团队：执行 GitHub 的操作。 Rust bug 最小化模式。 使用 PineTime 智能手表，在 IoT 中教授 Rust。  ＃Rust2020 查找位于＃Rust2020 Read Rust的所有帖子。
周箱 这周的箱子是wasmtime，这是 WebAssembly 的独立 JIT 风格的运行时。
谢谢乔什·特里维特（Josh Triplett）的建议！
Submit your suggestions and votes for next week！
呼吁参与 一直想为开源项目做贡献，但不知道从哪里开始？每周我们都会重点介绍 Rust 社区的一些任务，供您选择和开始！</description>
    </item>
    
    <item>
      <title>Rust周报 312(译)</title>
      <link>/2019/11/16/rust%E5%91%A8%E6%8A%A5-312%E8%AF%91/</link>
      <pubDate>Sat, 16 Nov 2019 20:44:26 +0800</pubDate>
      
      <guid>/2019/11/16/rust%E5%91%A8%E6%8A%A5-312%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-11-12
原文：本周 Rust(螃蟹) 312
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.39.0。🎉🎈 stable Rust 版本上的，Async-await。 宣布 async-std 1.0。 发布了 Futures 0.3（具有 async/await 支持）。 比较 Rust 和 C ++ 并发。 在 Rust 中，使用类型级编程，来进行更安全的硬件抽象。 揭开 async Rust 的神秘面纱。 Mors Servo 提供的 librsvg 中的 CSS，现在已使用 Rust 。 Swift 如何在 Rust 无法实现的地方，实现动态链接。 对 Windows 代码库的底层系统组件，进行实验性重写。 iou：用于 liburing 的 Rust 绑定。 在 Rust 中，泛化协程。 关于 Rust 中的类型布局和 ABI 的注释。 使用 eBPF，将 Rust 放入内核。 运动控制历险记：使用 G-Code。 使用 Meili，搜索 Rust 箱子。  ＃Rust2020 查找位于＃Rust2020 Read Rust的所有帖子。</description>
    </item>
    
    <item>
      <title>Rust周报 311(译)</title>
      <link>/2019/11/07/rust%E5%91%A8%E6%8A%A5-311%E8%AF%91/</link>
      <pubDate>Thu, 07 Nov 2019 10:04:45 +0800</pubDate>
      
      <guid>/2019/11/07/rust%E5%91%A8%E6%8A%A5-311%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-11-05
原文：本周 Rust(螃蟹) 311
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  完成向新借用检查器的过渡。 C ++ WinRT 的作者对 Windows Runtime 的 Rust 支持。 你可能不想要.into_iter().cloned()。 Clippy 正在删除其插件界面。 Rust 并发模式：condvars 和 locks。 如何使您的 C 代码库吃上螃蟹：用 Rust 重写键盘固件 keymap。 编写 bump 分配器时，请始终向下。 运动控制历险记：初始运动系统。 2019-10-24 编译器团队会议。  ＃Rust2020 查找位于＃Rust2020 Read Rust的所有帖子。
周箱 这周的箱子是displaydoc，一个程序派生宏，通过 doc 注释的字符串-插值，来实现Display。
谢谢威利·卡普勒的建议！
提交您下周的建议和投票！
呼吁参与 一直想为开源项目做贡献，但不知道从哪里开始？每周我们都会重点介绍 Rust 社区的一些任务，供您选择和开始！
其中一些任务也可能有导师，请访问任务页面以获取更多信息。
 宣布 safety-dance ：从流行的箱子中，删除不必要的不安全代码。 RFC：使 Cargo 在已编译的二进制文件中，嵌入依赖项的版本。 [good first issue] cargo-sweep: cargo-sweep 能不带上 rustup 工作吗？ [good first issue] rubble: 添加一个函数，用来读取到 rubble-nrf52 的设备地址。 [good first issue] rubble: 不要放弃，即使错过了初始发送窗口「initial transmit window」。 [good first issue] rubble: 当 event is missed，llcp updates 就不会应用。 [good first issue] rubble: log 缓存溢出，位于 nrf52832。 [good first issue] rubble: 试用 scroll 或 zerocopy，用来 pdus 的 de/encoding{解/编码}。 [good first issue] rubble: 只响应 ll_version_ind 一次。  如果您是 Rust 项目的所有者并且正在寻找贡献者，请提交任务这里。</description>
    </item>
    
    <item>
      <title>Rust周报 310(译)</title>
      <link>/2019/10/31/rust%E5%91%A8%E6%8A%A5-310%E8%AF%91/</link>
      <pubDate>Thu, 31 Oct 2019 23:02:52 +0800</pubDate>
      
      <guid>/2019/10/31/rust%E5%91%A8%E6%8A%A5-310%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-10-29
原文：本周 Rust(螃蟹) 310
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  征集：博客 2020 。 为什么 trait 中的 async fn 很难。 Rust 实现 Spark 的结果令人鼓舞。 Nannou 授予 Mozilla 拨款， Rust 中的基础音频开发。 Rust 和 C ++上的浮点数密集型代码。 docs.rs 中断，事后评估。 rust-analyzer 的成本。 为 Druid 构建小部件（一个 WIP 本机 Rust GUI 工具包）。 Ferris Fencing - 基于 RISC-V VM 的 Rust 游戏。 安全技术，在稳定的编译器进行专业化工作。 仔细研究 Rust 的所有权。 Servo 编程：timer 不可思议的缩减。 履行 momo 的编译时承诺。 运动控制历险记：初始运动系统。 请欢迎 pnkfelix，作为编译器团队的共同负责人。  周箱 可悲的是，没有周箱建议。</description>
    </item>
    
    <item>
      <title>Rust周报 309(译)</title>
      <link>/2019/10/24/rust%E5%91%A8%E6%8A%A5-309%E8%AF%91/</link>
      <pubDate>Thu, 24 Oct 2019 17:55:15 +0800</pubDate>
      
      <guid>/2019/10/24/rust%E5%91%A8%E6%8A%A5-309%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-10-22
原文：本周 Rust(螃蟹) 309
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  我使用生成器，制作了一个 Rust 的 NES 模拟器。 rustc 把时间花在了哪些地方。 进度：2019 年编译器路线图。 进度：const 泛型更新。 异步析构函数。 使用 Rust 和 WebAssembly 的微型静态全文搜索引擎。 MicroRust：在 BBC micro:bit 上，通过 Rust 探索微控制器的世界。 在 Linux 中，处理进程终止。 嵌入式 WG 的操作系统教程重写，对 Raspberry Pi 4 的添加支持。 运动控制历险记：简单的自动化序列 编程 Servo ：运送信息端口（通过一个 detour{绕行}进入 Spectre）。 嵌入式 Rust 中的 Rotary 编码器。  本周箱子 这周的箱子是grubbnet，一个用于网络应用程序和游戏的 TCP 客户端/服务器库。
谢谢Dooskington的建议！
提交您下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！</description>
    </item>
    
    <item>
      <title>Rust周报 308(译)</title>
      <link>/2019/10/19/rust%E5%91%A8%E6%8A%A5-308%E8%AF%91/</link>
      <pubDate>Sat, 19 Oct 2019 22:16:31 +0800</pubDate>
      
      <guid>/2019/10/19/rust%E5%91%A8%E6%8A%A5-308%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-10-15
原文：本周 Rust(螃蟹) 308
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  使 Tokio scheduler 快 10 倍。 在 2019 年，如何进一步加快 Rust 编译器的速度。 node 实验 - 使用 Rust 探索异步基础知识。 在 CLion 中，调试 Rust 代码。 我最喜欢的 rust 函数std::mem::drop。 sodiumoxide 中的漏洞：generichash::Digest::eq 始终返回 true。 使用 Rust 的 RISC-V OS：Communications。 将一个箱子从 futures 0.1 迁移到 0.3。 运动控制历险记：通信系统第 2 部分。 宣布 Rustup 1.20.0。 新的 VxWorks 版本，支持 Rust。 AWS 赞助 Rust 项目。  本周的箱子 这周，我们不是一个，也不是两个，而是*三个*箱子！有Watt，一个基于 WASM 的快速 proc-macro 运行时，Anyhow，为另一个错误处理箱，和spotify-tui，Spotify 的控制台用户界面。</description>
    </item>
    
    <item>
      <title>Rust周报 307(译)</title>
      <link>/2019/10/10/rust%E5%91%A8%E6%8A%A5-307%E8%AF%91/</link>
      <pubDate>Thu, 10 Oct 2019 23:09:19 +0800</pubDate>
      
      <guid>/2019/10/10/rust%E5%91%A8%E6%8A%A5-307%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-10-08
原文：本周 Rust(螃蟹) 307
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  宣布 Inside Rust 博客。 Async 基础更新：完善的时间。 通过 cargo-audit 0.9 确保 Rust 项目的安全：依赖树，core advisories，未维护的箱子。 为 Rust 设计一个 COM 库。 Tonic：gRPC 已进入 async/await 状态。 带 async/await 的 reqwest alpha 已发布。 在 Rust 中，编写操作系统 - 2019 年 9 月更新。 静态断言 1.0 发布。 所有权和 impl Trait。 在 Rust 中，编写 HTTP 服务器（第 1 部分）。 运动控制历险记：通信系统第 1 部分。 在 Visual Studio Code 上，使用 Rust 和 Apache Mynewt 编码 nRF52。 本月在 Rust GameDev 2 中-2019 年 9 月。 嵌入式工作组新闻通讯 19。 Rust 现在有超过 100000 次提交。 [pdf] 利用Rust类型进行模块化规格和验证。  本周的箱子 这周的箱子是algebraics，用于无穷精度计算的，纯 Rust 代数数字库。</description>
    </item>
    
    <item>
      <title>Rust周报 306(译)</title>
      <link>/2019/10/04/rust%E5%91%A8%E6%8A%A5-306%E8%AF%91/</link>
      <pubDate>Fri, 04 Oct 2019 15:35:58 +0800</pubDate>
      
      <guid>/2019/10/04/rust%E5%91%A8%E6%8A%A5-306%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-10-01
原文：本周 Rust(螃蟹) 305
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  🎈🎉宣布 Rust 1.38.0。🎉🎈 Cargo 安全咨询。 Async-await 处于 beta。 Rust 引用类型的精确心智模型。 对抗 Async 碎片。 使用 Rust 制作 RISC-V 操作系统。 Rust 中的插件。 用 Rust，构建 Azure IoT Edge 安全守护程序。 运动控制历险记：FPS 计数器。 因果分析 Rust 代码。 gfx-rs 2019 更新。 宣布 Drone OS - 用 Rust 编写的实时应用程序的嵌入式操作系统。  本周的箱子 这周的箱子是pin-project，一份程序宏衍生品，符合人体工程学且安全Pin预测。
谢谢克里希纳（Krishna Sannasi）的建议！
提交您下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！
其中一些任务也可能会有指导者，请访问任务页，了解更多信息。
 Vector：更新stdin源码使用线程，而不是使用 tokio 版本。Vector 是一种高性能的可观察性的数据路由器。 mundane：启用所有功能的 docs.</description>
    </item>
    
    <item>
      <title>Rust周报 305(译)</title>
      <link>/2019/09/26/rust%E5%91%A8%E6%8A%A5-305%E8%AF%91/</link>
      <pubDate>Thu, 26 Sep 2019 17:01:18 +0800</pubDate>
      
      <guid>/2019/09/26/rust%E5%91%A8%E6%8A%A5-305%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-09-24
原文：本周 Rust(螃蟹) 305
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  LLVM：缩小差距 - Rust 和 C / C ++之间的跨语言 LTO。 Weld：使用 Rust 和 LLVM 将 numpy，scikit 和 pandas 加速多达 100 倍。 声明式内存管理。 泛型新类型：一种解决 orphan 规则的方法。 Async 构建器。 Adventures in motion control：顶层基础架构。 使用 Apache Mynewt 和 Embedded Rust 在 STM32 L476 上，构建 NB-IoT GPS 跟踪器。 导航到 Rust OSS 社区。  本周的箱子 本周的箱子是runtime，是面向实验性的热加载的运行时。
谢谢维克兰特的建议！
提交您下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！</description>
    </item>
    
    <item>
      <title>Rust周报 304(译)</title>
      <link>/2019/09/19/rust%E5%91%A8%E6%8A%A5-304%E8%AF%91/</link>
      <pubDate>Thu, 19 Sep 2019 22:15:46 +0800</pubDate>
      
      <guid>/2019/09/19/rust%E5%91%A8%E6%8A%A5-304%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-09-17
原文：本周 Rust(螃蟹) 304
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  即将发布的 docs.rs 变化。 Rust 的 GitHub Actions。 Rustconf 2019 视频。 改进了 Rust 和 C2Rust 中的 C 变量。 Oreboot：Coreboot 减去 C，Google 的一次演讲。 宣布 awesome-rust-mentors。 运动控制中的冒险。  本周的箱子 本周的箱子是texture-synthesis，一个通过选择示例，生成纹理的程序。
谢谢威利卡普勒的建议！
提交下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！
其中一些任务也可能会有指导者，请访问任务页，了解更多信息。
 Rustup 需要你的帮助（测试一个新功能）。 Rustup 需要你的帮助（测试一个新功能，第二部分）。 通知：寻找维护者。Notify 是 Rust 的跨平台文件系统通知库。  如果您是 Rust 项目所有者并且正在寻找贡献者，请提交任务这里。
Rust Core 的更新 在上周合并了有 282 个请求
 rustc：允许使用 wasm32-wasi 的 cdylib 箱子类型 隐藏 &amp;ndash;cfg 解析期间，发出的诊断信息 改善alloc::format!</description>
    </item>
    
    <item>
      <title>Rust周报 303(译)</title>
      <link>/2019/09/12/rust%E5%91%A8%E6%8A%A5-303%E8%AF%91/</link>
      <pubDate>Thu, 12 Sep 2019 10:57:01 +0800</pubDate>
      
      <guid>/2019/09/12/rust%E5%91%A8%E6%8A%A5-303%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-09-10
原文：本周 Rust(螃蟹) 303
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust 如何优化 async/await II：程序分析。 在 ESP32 上的 Rust。 Linux.Fe2O3：一个 Rust 病毒。 改善一个箱子的编译时间。 hyper 0.13 alpha 支持 async/await。 Rust 编写操作系统：2019 年 8 月更新。 大型组织中的 Rust - 会议记录。 Futures 并发。  本周的箱子 本周的箱子是viu，终端图像查看器。
谢谢威利卡普勒建议！
提交下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！
其中一些任务也可能会有指导者，请访问任务页，了解更多信息。
 请求帮助，为 GCC 实现一个独立的 Rust 前端。 Rusoto：寻找维护者。  如果你是一个 Rust 项目的所有者，并且正在寻找贡献者，请在这里提交任务。
Rust Core 的更新 在上周合并了 303 个请求</description>
    </item>
    
    <item>
      <title>关于Rust项目肥大的思考(译)</title>
      <link>/2019/09/05/%E5%85%B3%E4%BA%8Erust%E9%A1%B9%E7%9B%AE%E8%82%A5%E5%A4%A7%E7%9A%84%E6%80%9D%E8%80%83%E8%AF%91/</link>
      <pubDate>Thu, 05 Sep 2019 10:52:40 +0800</pubDate>
      
      <guid>/2019/09/05/%E5%85%B3%E4%BA%8Erust%E9%A1%B9%E7%9B%AE%E8%82%A5%E5%A4%A7%E7%9A%84%E6%80%9D%E8%80%83%E8%AF%91/</guid>
      <description>关于 Rust 项目大小膨胀的思考 2019 年 8 月 21 日 ❤️ 原文
我要接受了一个PR，这将加快了 druid 的编译时间，约 3 倍，而其可执行文件大小则变为近乎 2 倍。在这种情况下，我认为需要权衡一下（没有国际化，这个 GUI 工具包严格上来说，是一个玩具），但膨胀使我不高兴，我认为有改善 Rust 生态系统的空间。
我们应该关心吗？ 对我来说，rust 中的膨胀主要是关于编译时间和可执行文件大小。关于编译时间的十大挑战，其中含有 Rust 的开发经验，但在某种程度上，它是由开发人员控制的，特别是选择那些臃肿的箱子。
膨胀是软件中的一个常见问题，但有一些事情使它在 Rust ，会是一个更大挑战：
 Cargo 很容易就够到箱子。 泛型，特别是单态化。 不支持动态库。  对编译时间影响的一个更微妙的方法是，使用像 rls 这样的工具。
这会因人而异，但我个人很在乎。我希望 XI 编辑器的核心是轻量级，特别是当我们能够考虑 UI 之类的问题时。但是，现在发布的二进制文件是 5.9M（发布版本，Windows，不包括语法着色，而这是额外的 2.1M）。为了减少膨胀，我在 Rust 生态系统中做了很多其他的事情，在这篇文章中，我会吹嘘一下。
功能 vs 膨胀 当然，我之所以考虑在 druid 上，进行如此大的编译时间跳跃，是因为我想要国际化，这是一个重要而复杂的特性。正确地进行这项工作，需要相当多的逻辑，其中包括区域匹配、Unicode 和自然语言处理（如复数规则）的。我没有*期待过*会有一个小箱子，能帮我做到这些。
最近我们看到的一个类似的权衡是，pulldown-cmark 关于Unicase dep 增加了 50K二进制文件大小。在这种情况下，CommonMark 规范要求 Unicode 大小写折叠，如果没有这个，它将不再符合标准。我理解这种不去匹配的诱惑，但我认为，不符合规范的版本是一件坏事，尤其是对世界上大多数母语不是英语的人不友好。
因此，重要的是，不要将精益求精与缺乏重要特性混为一谈。真正要说的是，膨胀是不必要的资源消耗，超出了满足需求所必需的范围。Unicode 和国际化是一个特别有争议的问题，这不仅是因为它们实际上，需要代码和数据才能正确处理，而且还因为它们有很大的膨胀量。
作&amp;rsquo;廋子&amp;rsquo;的基础箱子 我将对“基础”箱子有更高的标准，这些箱子会给多数 Rust 应用所使用。*不*使用依赖关系会是一个膨胀关注点，或者根据需求和对膨胀的容忍度，将生态系统分割成不同的解决方案。</description>
    </item>
    
    <item>
      <title>Rust周报 302(译)</title>
      <link>/2019/09/04/rust%E5%91%A8%E6%8A%A5-302%E8%AF%91/</link>
      <pubDate>Wed, 04 Sep 2019 21:39:23 +0800</pubDate>
      
      <guid>/2019/09/04/rust%E5%91%A8%E6%8A%A5-302%E8%AF%91/</guid>
      <description>本周的螃蟹行情
日期：2019-09-03
原文：本周 Rust(螃蟹) 302
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*这本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR。
Rust 社区的更新 新闻和博客文章  Rust Web 应用程序简介。 本月 Rust GameDev＃1 - 2019 年 8 月。 HHVM 正将其部分 OCaml 代码，重写为 Rust。 宣布 cargo-udeps。 宣布 structopt 0.3。 Rust 中的语义验证。 STM32 Blue Pill 上的低功率 NB-IoT，带有 Apache Mynewt 和嵌入式 Rust。  本周的箱子 本周的箱子是cargo-udeps，Cargo 子命令，用于查找未使用的依赖项。
谢谢克里斯托弗达勒姆建议！
提交下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！
其中一些任务也可能会有指导者，请访问任务页，了解更多信息。
_没有针对 CFP 提出任何问题_。
如果你是一个 Rust 项目的所有者，并且正在寻找贡献者，请在这里提交任务。
Rust Core 的更新 在上周合并了 214 个请求</description>
    </item>
    
    <item>
      <title>Rust周报 301(译)</title>
      <link>/2019/09/04/rust%E5%91%A8%E6%8A%A5-301%E8%AF%91/</link>
      <pubDate>Wed, 04 Sep 2019 14:07:11 +0800</pubDate>
      
      <guid>/2019/09/04/rust%E5%91%A8%E6%8A%A5-301%E8%AF%91/</guid>
      <description>本周的螃蟹行情
2019 年 8 月 27 日
原文：本周 Rust(螃蟹) 301
你好，欢迎再来一期*本周的螃蟹行情*！Rust是一种追求三位一体的系统语言：安全性、并发性和速度。这是它的进展和社区的每周总结。有什么要说的吗？推特@ThisWeekInRust或向我们发送请求。 想参与吗？我们热爱贡献.
*本周的螃蟹行情*是在在 Github 上公开的。如果你在本周的问题中发现任何错误，请提交 PR.
来自 Rust 社区的更新 新闻和博客文章  小 Rust 结构，应通过复制或借用传递？ 关于 Rust bloat 的思考. Rust GUI 生态系统概述. c2rust 简介. Rust 中的异步堆栈跟踪. 小规模科学计算的案例研究 - Polsim. Rust 中的内存管理：实体组件系统(ECS). 实际上使用 Crev，或者，信任软件依赖性的问题. 2019 年 COSCUP “一切尽在 Rust”回顾.  本周的箱子 本周的箱子是include_flate，include_bytes!/include_str的变体，会在编译时压缩，和运行时延迟解压。
多亏了威利·卡普勒提交了这个建议！
提交你下周的建议和投票！
呼吁参与 总是想为开源项目做出贡献，但不知道从哪里开始？每周我们都会强调一些来自 Rust 社区的任务，供您挑选并开始！
其中一些任务也可能会有指导者，请访问任务页，了解更多信息。
_没有针对 CFP 提出任何问题_。
如果你是一个 Rust 项目的所有者，并且正在寻找贡献者，请在这里提交任务。
Rust Core 更新 上周合并221 个请求
 稳定async_await - Rust 1.</description>
    </item>
    
    <item>
      <title>小的Rust结构类型,应使用复制还是借用传递?(译)</title>
      <link>/2019/09/02/%E5%B0%8F%E7%9A%84rust%E7%BB%93%E6%9E%84%E7%B1%BB%E5%9E%8B%E5%BA%94%E4%BD%BF%E7%94%A8%E5%A4%8D%E5%88%B6%E8%BF%98%E6%98%AF%E5%80%9F%E7%94%A8%E4%BC%A0%E9%80%92%E8%AF%91/</link>
      <pubDate>Mon, 02 Sep 2019 10:11:45 +0800</pubDate>
      
      <guid>/2019/09/02/%E5%B0%8F%E7%9A%84rust%E7%BB%93%E6%9E%84%E7%B1%BB%E5%9E%8B%E5%BA%94%E4%BD%BF%E7%94%A8%E5%A4%8D%E5%88%B6%E8%BF%98%E6%98%AF%E5%80%9F%E7%94%A8%E4%BC%A0%E9%80%92%E8%AF%91/</guid>
      <description>对于小的 Rust 结构类型，应使用复制（copy）还是借用(borrow)传递？ 2019 年 8 月 26 日 ❤️ 原文
像许多好故事一样，这个故事从一个简单的问题开始。对于小的 Rust 结构类型，应使用复制还是借用传递？例如：
struct Vector3 { x: f32, y: f32, z: f32 } fn dot_product_by_copy(a: Vector3, b: Vector3) -&amp;gt; float { a.x*b.x + a.y*b.y + a.z*b.z } fn dot_product_by_borrow(a: &amp;amp;Vector3, b: &amp;amp;Vector3) -&amp;gt; float { a.x*b.x + a.y*b.y + a.z*b.z }  就是这个简单的问题将我带向了长征之路，带有些惊人的曲折和发现。
为什么这个问题是重要的呢 这个问题的答案有两个原因：性能和人体工程学。
性能 通过复制传递就是说，我们要每个Vector3复制 12 个字节(3 个 f32 类型)。 若是通过 borrow 传递，那么每个Vector3就是一个 8 字节的指针（在 64 位上）。其实两者很接近，也许对性能来说无关紧要。</description>
    </item>
    
    <item>
      <title>如何用VSCode调试Rust(译)</title>
      <link>/2019/08/30/%E5%A6%82%E4%BD%95%E7%94%A8vscode%E8%B0%83%E8%AF%95rust%E8%AF%91/</link>
      <pubDate>Fri, 30 Aug 2019 11:13:52 +0800</pubDate>
      
      <guid>/2019/08/30/%E5%A6%82%E4%BD%95%E7%94%A8vscode%E8%B0%83%E8%AF%95rust%E8%AF%91/</guid>
      <description>如何用 Visual Studio Code 调试 Rust 🌟 2019-03-24 ❤️ 原文
我是 Visual Studio Code 编辑器的铁杆。不幸的是，它的 Rust 调试不 太能 开箱即用。
配置调试器并不困难。但有几个步骤。我已经看了好几遍了。我写这本指南是为了省下未来回想的脑力。
希望本指南对其他一些人也有用。
安装 Rust 和 VS Code 这应该不用多说了。
安装 Rust
安装 Visual Studio Code
安装 VS Code 扩展 您需要安装一个扩展。哪一个取决于你的平台。
C/C++（Windows）
codelldb（OS X/Linux）
还要继续安装Rust 扩展。
配置 VS Code 现在已经安装了工具，您需要配置 VS Code 启动属性。
单击“调试(Debug)”-&amp;gt;“添加配置(Add Configuration)”
如果您在 Windows 上，请选择C++ (Windows)
如果您使用的是 Mac 或 Linux，请选择LLDB: Custom Launch
这应该会创建并打开launch.json。您必须手动更改“program”下的可执行文件名。
接下来，您应该验证是否启用了断点。有些读者说需要这样做。一些机器是默认启用它。🤷‍♂️
文件-&amp;gt;首选项-&amp;gt;设置（File -&amp;gt; Preferences -&amp;gt; Settings）</description>
    </item>
    
    <item>
      <title>Rust ? 语法糖 (译)</title>
      <link>/2019/02/27/rust-%E8%AF%AD%E6%B3%95%E7%B3%96-%E8%AF%91/</link>
      <pubDate>Wed, 27 Feb 2019 14:56:41 +0800</pubDate>
      
      <guid>/2019/02/27/rust-%E8%AF%AD%E6%B3%95%E7%B3%96-%E8%AF%91/</guid>
      <description>宏 std::try macro_rules! try { ( $ expr : expr ) =&amp;gt; { ... }; ( $ expr : expr , ) =&amp;gt; { ... }; }  用于减少样板代码，以匹配Result以及转换下游错误的帮助宏。
增加?运算符，以替换try!。简化。
try!与给定Result匹配。对 Ok 变量，表达式为包装的值。
如果是 Err 变量，则检索内部错误。try!！然后使用 From 执行转换。这提供了专用错误和更通用错误之间的自动转换。然后立即返回错误。
因为提前返回，try!只能在返回Result的函数中使用。
Examples use std::io; use std::fs::File; use std::io::prelude::*; enum MyError { FileWriteError } impl From&amp;lt;io::Error&amp;gt; for MyError { fn from(e: io::Error) -&amp;gt; MyError { MyError::FileWriteError } } // 快速返回错误的首选方法 fn write_to_file_question() -&amp;gt; Result&amp;lt;(), MyError&amp;gt; { let mut file = File::create(&amp;#34;my_best_friends.</description>
    </item>
    
    <item>
      <title>Rust E0008 - ref 的重要性（译）</title>
      <link>/2019/02/25/rust-e0008-ref-%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E8%AF%91/</link>
      <pubDate>Mon, 25 Feb 2019 14:17:47 +0800</pubDate>
      
      <guid>/2019/02/25/rust-e0008-ref-%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E8%AF%91/</guid>
      <description>官方原文  E0008，(无法逾越的 ref 关键字) 匹配条件语句中的绑定名称，在模式控制中保留了其类型。因此，若在一个模式中，这一名称是通过移动进行绑定的，那它也会被移动到在模式代码中的参考变量位置。这样做的话，会阻止原名称在匹配语句的主体中可用。
考虑以下:
match Some(&amp;#34;hi&amp;#34;.to_string()) { Some(s) if s.len() == 0 =&amp;gt; {}, // 使用 s.  _ =&amp;gt; {}, }  变量 s 具有 String 类型，并且它在 匹配语句 中的用法是 String 类型的变量。 使用s变量的代码，在匹配语句主体的分离作用域内，执行有效，因此该值被移动到此匿名作用域内，结果就是在匹配语句的主体中变得不可用。
上面的问题，可以通过使用 ref 关键字来解决。
match Some(&amp;#34;hi&amp;#34;.to_string()) { Some(ref s) if s.len() == 0 =&amp;gt; {}, _ =&amp;gt; {}, }  虽然，这个例子似乎不怎么厉害且易于解决，但当它遇到消耗该值的函数时,问题就变得清晰了:
struct A{} impl A { fn consume(self) -&amp;gt; usize { 0 } } fn main() { let a = Some(A{}); match a { Some(y) if y.</description>
    </item>
    
    <item>
      <title>Doc Templite 模版工具</title>
      <link>/2019/02/20/doc-templite-%E6%A8%A1%E7%89%88%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 20 Feb 2019 12:55:13 +0800</pubDate>
      
      <guid>/2019/02/20/doc-templite-%E6%A8%A1%E7%89%88%E5%B7%A5%E5%85%B7/</guid>
      <description>回顾初始化脚本 第八步：
 8. 对 项目目录 执行 [doc-templite] - js 模版工具  doc-templite 为了解决，能一次性替换，文件中相应部分的内容，doc-templite 诞生了。 吸取了doctoc,templite,toml&amp;hellip;相关工具/库的精华，综合而成。
readme doc-templite   为 多个 md 文件 准备的模版工具
 当我们使用 多个文件或者多项目的readme.md时,样式可以帮助我们说出或显示某些东西,比如 md 表格,但下次我想要一个 md 网络链接. 太麻烦了! 去修改更改这些文件,所以doc-templite也许有帮助.
 安装 npm i -g doc-templite 示例 1. 修改readme.md👇 必须有 doc-templite 标签 &amp;lt;!-- doc-templite START --&amp;gt; &amp;lt;!-- doc-templite-id = &amp;#39;readme&amp;#39; --&amp;gt; &amp;lt;!-- name = &amp;#39;yobrave&amp;#39; age = 18 --&amp;gt; &amp;lt;!-- doc-templite END --&amp;gt;  注意:在 START-END 块中,我们使用的是 toml 和 &amp;lt;!</description>
    </item>
    
    <item>
      <title>Mrm 定制你的默认文件 Js工具</title>
      <link>/2019/02/17/mrm-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%87%E4%BB%B6-js%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 17 Feb 2019 14:11:05 +0800</pubDate>
      
      <guid>/2019/02/17/mrm-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%87%E4%BB%B6-js%E5%B7%A5%E5%85%B7/</guid>
      <description>入门 之前简单介绍了下 mrm
，当然mrm 项目的 Github 页面也很适合入门
 或是看看其 readme 的中文翻译
 书接上回 init.sh 脚本中，有关 mrm 命令启动 的编写
 4. 启用 [mrm] ，一个 gitignore，readme&amp;hellip; 快速初始化的 js 工具。(运用之前获得的信息+参数)  echo &amp;#34;\n4. mrm ***&amp;#34; mrm readme --config:repos $2 --config:name $1 --config:commit $COMMIT --config:date $DATE mrm gitignore Readme 的 配置文件（mrm readme &amp;hellip;)  请查看入门，了解些知识，再继续
  ~/dotfiles/mrm/readme/index.js  大体思路，
 获得 命令参数&#39;name&#39;,&#39;repos&#39;,&#39;date&#39;,&#39;commit&#39; 分析repos是ex吗（这样此项目的模版就会是两个主分支：翻译/解释） 添加各自分支的内容，填充上doc-templite工具的标记与参数。（*doc-templite*工具下回分解) 最后当然是，感谢与免责，以及一大串 md 链接格式简写。  const {lines} = require(&amp;#39;mrm-core&amp;#39;); function task(config) { const values = config.</description>
    </item>
    
    <item>
      <title>终端命令行篇-起始</title>
      <link>/2019/02/05/%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87-%E8%B5%B7%E5%A7%8B/</link>
      <pubDate>Tue, 05 Feb 2019 15:27:19 +0800</pubDate>
      
      <guid>/2019/02/05/%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%AF%87-%E8%B5%B7%E5%A7%8B/</guid>
      <description>终端命令脚本 为了，不一次次重复。集合工作流程为命令，是必要的。 我所有的*-zh 项目:中文翻译 和 *-explain:解释都是从这里开始的。
开始中文翻译(zh) $ init https://github.com/worrydream/Tangle.git es  开始解释项目(explain) $ init https://github.com/worrydream/Tangle.git ex  总览脚本 此终端脚本思路  1. 获取 添加了 zh/explain 的 项目名称，并建立此名称目录 2. 初始化 git 存储库，放入目录 source 中(此处存在本地/远程的分支，由第三参数决定) 3. 得到 source 中，存储库的最新 git 信息(日期，commit 码) 4. 启用 mrm ，一个 gitignore，readme&amp;hellip; 快速初始化的 js 工具。(运用之前获得的信息+参数) 5. 找出 source 中的所有 md 文件，并添加到上一目录层.mds-list文件(使用 find) 6. 复制本地脚本sync-en.sh到项目目录 7. 对 source 目录 执行[translate-mds]- js 翻译工具 8. 对 项目目录 执行 doc-templite - js 模版工具 9.</description>
    </item>
    
    <item>
      <title>&gt;&gt;&gt; Rust 官方学习索引(译&#43;Copy)</title>
      <link>/2018/12/28/rust-%E5%AE%98%E6%96%B9%E5%AD%A6%E4%B9%A0%E7%B4%A2%E5%BC%95%E8%AF%91-copy/</link>
      <pubDate>Fri, 28 Dec 2018 20:13:43 +0800</pubDate>
      
      <guid>/2018/12/28/rust-%E5%AE%98%E6%96%B9%E5%AD%A6%E4%B9%A0%E7%B4%A2%E5%BC%95%E8%AF%91-copy/</guid>
      <description>.blog-post  h2:first-child {display:none}   ❤️ 学习 Rust    开启您的 Rust 之旅   《Rust 程序设计语言》被亲切地称为“圣经”。本书从基本原则出发，给出了 Rust 语言的概览。您将在阅读本书的过程中构建几个项目，读完本书后，您就能扎实地掌握 Rust 语言。
阅读本书！（中文）   此外，Rustlings 课程会指导您下载并设置 Rust 工具链，在命令行中教您阅读和编写 Rust 代码的语法基础。它可以运行在您自己的环境中，是《通过例子学 Rust》之外的另一种选择。
学习 Rustlings 课程！   如果您不喜欢阅读大量的文档来学习语言，那么《通过例子学 Rust》就能涵盖您要学的知识。虽然本书花了很多篇幅来解释代码，但它展示的代码很丰富，并且尽量减少了文字解释。它还包括很多练习！
阅读《通过例子学 Rust》！（中文）       与 Rust 共同成长    阅读核心文档 以下所有文档都可以用 rustup doc 命令在本地阅读，它会在您的浏览器中离线打开这些资源！
标准库 详尽的 Rust 标准库 API 手册。  版本指南 Rust 版本指南。  Cargo 之书（中文） Rust 的包管理器和构建系统。  rustdoc 之书(中文) 学习如何为您的 crate 编写完美的文档。  rustc 之书(中文) 熟悉 Rust 编译器中可用的选项。  编译错误索引表 深入解释了您可能会遇到的编译错误。     在应用领域中点亮您的技能树 命令行之书 (中文)  学习如何用 Rust 构建高效的命令行应用。  WebAssembly 之书(中文)  通过 WebAssembly 用 Rust 构建浏览器原生的库。  嵌入式之书  熟练掌握用 Rust 编写微控制器和其它嵌入式系统程序。</description>
    </item>
    
    <item>
      <title>Projects me</title>
      <link>/about/</link>
      <pubDate>Tue, 14 Apr 2015 22:17:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>项目（翻译与工具） Oh my ,第一个例子(很久很久以前)  example w3 blog template  Vue  getnoabsbooks read book no-abs china liaoAliao jsonstore axios sample
 vue-scrollto docs translate scroll
  React  react-from-zero examples transalte React hacknews example  Js  translate-mds 所有 md 翻译项目的起点工具 translate tool doc-templite md 文件的模版工具 templite tool
 side-content sider
 lerna-website lerna translate
 codelabs 出品的:first pwa pwa example transalte
  Rust  gentle-intro book translate rust-ffi-omnibus book translate rustwasm-book book translate wasm-bindgen book translate Cargo Book book translate</description>
    </item>
    
  </channel>
</rss>