{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useEffect.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useEffect.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","BasicEffect","EffectCleanup","MultipleEffects","ArrayDep","ArrayDepMount","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-effect.8b713b79.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","const BasicEffect = `() => {\n  const [age, setAge] = useState(0)\n  const handleClick = () => setAge(age + 1)\n\n  useEffect(() => {\n    document.title = 'You are ' + age + ' years old!'\n  })\n\n  return <div>\n    <p> Look at the title of the current tab in your browser </p>\n    <button onClick={handleClick}>Update Title!! </button>\n  </div>\n}`\n\nconst EffectCleanup = `() => {\n  useEffect(() => {\n    const clicked = () => console.log('window clicked')\n    window.addEventListener('click', clicked)\n\n    // return a clean-up function\n    return () => {\n      window.removeEventListener('click', clicked)\n    }\n  }, [])\n\n  return <div>\n    When you click the window you'll \n    find a message logged to the console\n  </div>\n}`\n\nconst MultipleEffects = `() => {\n  // 🍟\n  useEffect(() => {\n    const clicked = () => console.log('window clicked')\n    window.addEventListener('click', clicked)\n\n    return () => {\n      window.removeEventListener('click', clicked)\n    }\n  }, [])\n\n  // 🍟 another useEffect hook \n  useEffect(() => {\n    console.log(\"another useEffect call\");\n  })\n\n  return <div>\n    Check your console logs\n  </div>\n}`\n\nconst ArrayDep = `() => {\n  const [randomNumber, setRandomNumber] = useState(0)\n  const [effectLogs, setEffectLogs] = useState([])\n\n  useEffect(\n    () => {\n      setEffectLogs(prevEffectLogs => [...prevEffectLogs, 'effect fn has been invoked'])\n    },\n    [randomNumber]\n  )\n\n  return (\n    <div>\n      <h1>{randomNumber}</h1>\n      <button\n        onClick={() => {\n          setRandomNumber(Math.random())\n        }}\n      >\n        Generate random number!\n      </button>\n      <div>\n        {effectLogs.map((effect, index) => (\n          <div key={index}>{'🍔'.repeat(index) + effect}</div>\n        ))}\n      </div>\n    </div>\n  )\n}`\n\nconst ArrayDepMount = `() => {\n  const [randomNumber, setRandomNumber] = useState(0)\n  const [effectLogs, setEffectLogs] = useState([])\n\n  useEffect(\n    () => {\n      setEffectLogs(prevEffectLogs => [...prevEffectLogs, 'effect fn has been invoked'])\n    },\n    []\n  )\n\n  return (\n    <div>\n      <h1>{randomNumber}</h1>\n      <button\n        onClick={() => {\n          setRandomNumber(Math.random())\n        }}\n      >\n        Generate random number!\n      </button>\n      <div>\n        {effectLogs.map((effect, index) => (\n          <div key={index}>{'🍔'.repeat(index) + effect}</div>\n        ))}\n      </div>\n    </div>\n  )\n}`\n\nexport { BasicEffect, EffectCleanup, MultipleEffects, ArrayDep, ArrayDepMount }\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport {\n    BasicEffect,\n    EffectCleanup,\n    MultipleEffects,\n    ArrayDep,\n    ArrayDepMount,\n} from '../components/examples/useEffect'\nimport { useState } from 'react'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"useeffect-🦋\"}}>{`useEffect 🦋`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记：`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useEffect`}</MDXTag>{`接受一个函数，它可能有副作用代码。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#useeffect\"}}>{`查看文档`}</MDXTag>{`。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`作用函数指的是，传递给`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`的第一个参数：函数类型。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"effect-基本作用\"}}>{`Effect 基本作用`}</MDXTag>\n<Editor code={BasicEffect} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"清理-effect\"}}>{`清理 Effect`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一段时间后，要清理 Effect 是很常见。要实现这一点，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{` 函数需返回一个清除函数。下面是一个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`addEventListener`}</MDXTag>{`例子。`}</MDXTag>\n<Editor code={EffectCleanup} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"多重效果\"}}>{`多重效果`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`多个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`调用可在组件函数中发生，如下所示：`}</MDXTag>\n<Editor code={MultipleEffects} />\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`其实 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`的调用是可以跳过的，即不一定会在每个渲染上调用。这是通过将第二个数组参数，传递给作用函数来完成的。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"跳过-effects（数组依赖）\"}}>{`跳过 Effects（数组依赖）`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在下面的例子中，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`被传递了具有一个值的数组，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`[randomNumber]`}</MDXTag>{`，因此，作用函数将在 mount（阶段）上，`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`和`}</MDXTag>{`每当生成新的随机数`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`randomNumber`}</MDXTag>{`时，调用。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`单击“生成随机数”按钮，以查看此内容。`}</MDXTag>\n<Editor code={ArrayDep} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"跳过效果（空数组依赖）\"}}>{`跳过效果（空数组依赖）`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在这个例子中，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`被传递了一个空数组，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`[]`}</MDXTag>{`。因此，只在 mount（阶段），调用作用函数。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`单击按钮，您会看到，并没有调用作用函数。`}</MDXTag>\n<Editor code={ArrayDepMount} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"跳过效果（无数组依赖）\"}}>{`跳过效果（无数组依赖）`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`如果没有数组依赖关系，作用函数将在每次渲染后，运行。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`useEffect(() => {\n    console.log('This will be logged after every render!')\n})\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}