{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useMemo.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useMemo.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","Starter","trim","Basic","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-memo.27b744dc.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","const Starter = `\nconst App = () => {\n    const [age, setAge] = useState(99)\n    const handleClick = () => setAge(age + 1)\n    const someValue = { value: \"someValue\" }\n    const doSomething = () => {\n      return someValue\n    }\n  \n    return (\n      <div>\n        <Age age={age} handleClick={handleClick}/>\n        <Instructions doSomething={doSomething} />\n      </div>\n    )\n}\n\nconst Age = ({ age, handleClick }) => {\n  return (\n    <div>\n      <div style={{ border: '2px', background: \"papayawhip\", padding: \"1rem\" }}>\n        Today I am {age} Years of Age\n      </div>\n      <pre> - click the button below 👇 </pre>\n      <button onClick={handleClick}>Get older! </button>\n    </div>\n  )\n}\n\nconst Instructions = memo((props) => {\n  return (\n    <div style={{ background: 'black', color: 'yellow', padding: \"1rem\" }}>\n      <p>Follow the instructions above as closely as possible</p>\n    </div>\n  )\n})\n\nrender (\n  <App />\n)\n`.trim();\n\nconst Basic = `\nconst App = () => {\n    const [age, setAge] = useState(99)\n    const handleClick = () => setAge(age + 1)\n    const someValue = useMemo(() => ({ value: \"someValue\" }))\n    const doSomething = () => {\n      return someValue\n    }\n  \n    return (\n      <div>\n        <Age age={age} handleClick={handleClick}/>\n        <Instructions doSomething={doSomething} />\n      </div>\n    )\n}\n\nconst Age = ({ age, handleClick }) => {\n  return (\n    <div>\n      <div style={{ border: '2px', background: \"papayawhip\", padding: \"1rem\" }}>\n        Today I am {age} Years of Age\n      </div>\n      <pre> - click the button below 👇 </pre>\n      <button onClick={handleClick}>Get older! </button>\n    </div>\n  )\n}\n\nconst Instructions = memo((props) => {\n  return (\n    <div style={{ background: 'black', color: 'yellow', padding: \"1rem\" }}>\n      <p>Follow the instructions above as closely as possible</p>\n    </div>\n  )\n})\n\nrender (<App />)\n`.trim();\n\nexport { Starter, Basic };\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport { Starter, Basic } from '../components/examples/useMemo'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"usememo-\"}}>{`useMemo 🎒`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记：`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useMemo`}</MDXTag>{`返回一个 `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://en.wikipedia.org/wiki/Memoization\"}}>{`memoized`}</MDXTag>{` 的值。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#usememo\"}}>{`查看文档`}</MDXTag>{`。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"入门示例\"}}>{`入门示例`}</MDXTag>\n<Editor noInline code={Starter} />\n<MDXTag name=\"p\" components={components}>{`上面的例子，与`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/usecallback\"}}>{`useCallback`}</MDXTag>{`类似。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这里唯一的区别是`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`someValue`}</MDXTag>{`是一个对象，而不是一个字符串。由于这个原因，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Instructions`}</MDXTag>{`尽管使用了`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React.memo`}</MDXTag>{`，组件仍会重新渲染。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`为什么？`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`对象是通过引用，进行比较，并且`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<App />`}</MDXTag>{`重新渲染的话，引用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`someValue`}</MDXTag>{`随时改变。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`有解决方案吗`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"基本用法\"}}>{`基本用法`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`对象，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`someValue`}</MDXTag>{`可以通过`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useMemo`}</MDXTag>{`，变为记忆化。这可以防止，不必要的重新渲染。`}</MDXTag>\n<Editor noInline code={Basic} />\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}