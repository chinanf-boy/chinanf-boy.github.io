{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useReducer.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useReducer.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","BasicExample","InitLazy","ImitateSetState","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-reducer.2133fa1b.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","const BasicExample = `const initialState = { width: 15 }\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'plus':\n      return { width: state.width + 15 }\n    case 'minus':\n      return { width: Math.max(state.width - 15, 2) }\n    default:\n      throw new Error(\"what's going on?\" )\n  }\n}\n\nconst Bar = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return <>\n    <div style={{ background: 'teal', height: '30px', width: state.width }}></div>\n    <div style={{marginTop: '3rem'}}>\n        <button onClick={() => dispatch('plus')}>Increase bar size</button>\n        <button onClick={() => dispatch('minus')}>Decrease bar size</button>\n    </div>\n    </>\n}\nrender(Bar)`\n\nconst InitLazy = `\nconst initializeState = () => ({\n  width: 100\n})\n// ✅ note how the value returned from the fn above overrides initialState below: \nconst initialState = { width: 15 }\nconst reducer = (state, action) => {\n  switch (action) {\n    case 'plus':\n      return { width: state.width + 15 }\n    case 'minus':\n      return { width: Math.max(state.width - 15, 2) }\n    default:\n      throw new Error(\"what's going on?\" )\n  }\n}\n\nconst Bar = () => {\n  const [state, dispatch] = useReducer(reducer, initialState, initializeState)\n  return <>\n    <div style={{ background: 'teal', height: '30px', width: state.width }}></div>\n    <div style={{marginTop: '3rem'}}>\n        <button onClick={() => dispatch('plus')}>Increase bar size</button>\n        <button onClick={() => dispatch('minus')}>Decrease bar size</button>\n    </div>\n    </>\n}\nrender(Bar)`\n\nconst ImitateSetState = `\nconst initialState = { width: 15 }\nconst reducer = (state, newState) => ({\n  ...state,\n  width: newState.width\n})\n\nconst Bar = () => {\n  const [state, setState] = useReducer(reducer, initialState)\n  return <>\n    <div style={{ background: 'teal', height: '30px', width: state.width }}></div>\n    <div style={{marginTop: '3rem'}}>\n        <button onClick={() => setState({width: 100})}>Increase bar size</button>\n        <button onClick={() => setState({width: 3})}>Decrease bar size</button>\n    </div>\n    </>\n}\nrender(Bar)`\n\nexport { BasicExample, InitLazy, ImitateSetState }\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport {\n    BasicExample,\n    InitLazy,\n    ImitateSetState,\n} from '../components/examples/useReducer'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"usereducer-🦖\"}}>{`useReducer 🦖`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记：`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useReducer`}</MDXTag>{` 可以用作 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useState`}</MDXTag>{` 的替代方法。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`适用场景：`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`state`}</MDXTag>{` 逻辑较复杂且包含多个子值，或者下一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`state`}</MDXTag>{` 依赖于之前的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`state`}</MDXTag>{` 等`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`根据您的用例，您可能会发现 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useReducer`}</MDXTag>{` 非常好测试`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#usereducer\"}}>{`查看文档`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"基本用法\"}}>{`基本用法`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`与`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`不同，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useReducer`}</MDXTag>{`调用是一个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{`和`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`initialState`}</MDXTag>{`，如下图所示。这个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useReducer`}</MDXTag>{`调用返回 State 属性和`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dispatch`}</MDXTag>{`功能。`}</MDXTag>\n<Editor noInline code={BasicExample} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"惰性初始化状态\"}}>{`惰性初始化状态`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useReducer`}</MDXTag>{`有第三个参数，是个函数。可以用来初始化状态，并且从该函数返回的任何内容，都将作为状态对象。此函数的调用可用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`initialState`}</MDXTag>{`作为参数 —— `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useReducer`}</MDXTag>{`的第二个参数。`}</MDXTag>\n<Editor noInline code={InitLazy} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"模仿thissetstate的行为\"}}>{`模仿`}<MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`this.setState`}</MDXTag>{`的行为`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useReducer`}</MDXTag>{`使用一个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{`，这不是 redux 严格的语法，例如传递给 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{` 的第二个参数，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{`不必有`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type`}</MDXTag>{`属性。这种宽松条件，能做些有趣的操作，例如，重命名第二个参数，并执行以下操作：`}</MDXTag>\n<Editor noInline code={ImitateSetState} />\n{/* todo: usecase where no re-renders when\nuseReducer returns the same state object */}\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}