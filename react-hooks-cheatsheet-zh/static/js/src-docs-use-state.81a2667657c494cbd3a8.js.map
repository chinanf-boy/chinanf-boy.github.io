{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useState.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useState.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","DeclareStateVar","UpdateStateVar","MultipleStateVars","StateObject","StateFromFn","CounterFnSetState","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-state.54d014d5.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","const DeclareStateVar = `() => {\n  const [count] = useState(100)\n  return <div> State variable is {count}</div>\n}`\n\nconst UpdateStateVar = `() => {\n  const [age, setAge] = useState(19)\n  const handleClick = () => setAge(age + 1)\n\n  return (\n    <div>\n      Today I am {age} Years of Age\n      <div>\n        <button onClick={handleClick}>Get older! </button>\n      </div>\n    </div>\n  )\n}`\n\nconst MultipleStateVars = `() => {\n  const [age, setAge] = useState(19)\n  const [siblingsNum, setSiblingsNum] = \n    useState(10)\n\n  const handleAge = () => setAge(age + 1)\n  const handleSiblingsNum = () => \n      setSiblingsNum(siblingsNum + 1)\n \n\n  return (\n    <div>\n      <p>Today I am {age} Years of Age</p>\n      <p>I have {siblingsNum} siblings</p>\n\n      <div>\n        <button onClick={handleAge}>\n          Get older! \n        </button>\n        <button onClick={handleSiblingsNum}>\n            More siblings! \n        </button>\n      </div>\n    </div>\n  )\n}`\n\nconst StateObject = `() => {\n  const [state, setState] = useState({ age: 19, siblingsNum: 4 })\n  const handleClick = val =>\n    setState({\n      ...state,\n      [val]: state[val] + 1\n    })\n  const { age, siblingsNum } = state\n\n  return (\n    <div>\n      <p>Today I am {age} Years of Age</p>\n      <p>I have {siblingsNum} siblings</p>\n\n      <div>\n        <button onClick={handleClick.bind(null, 'age')}>Get older!</button>\n        <button onClick={handleClick.bind(null, 'siblingsNum')}>\n          More siblings!\n        </button>\n      </div>\n    </div>\n  )\n}`\n\nconst StateFromFn = `() => {\n  const [token] = useState(() => {\n    let token = window.localStorage.getItem(\"my-token\");\n    return token || \"default#-token#\"\n  })\n\n  return <div>Token is {token}</div>\n}`\n\nconst CounterFnSetState = `() => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <p>Count value is: {count}</p>\n      <button onClick={() => setCount(0)}>Reset</button>\n      <button \n        onClick={() => setCount(prevCount => prevCount + 1)}>\n        Plus (+)\n      </button>\n      <button \n        onClick={() => setCount(prevCount => prevCount - 1)}>\n       Minus (-)\n      </button>\n    </>\n  );\n}`\n\nexport {\n  DeclareStateVar,\n  UpdateStateVar,\n  MultipleStateVars,\n  StateObject,\n  StateFromFn,\n  CounterFnSetState\n}\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport {\n    DeclareStateVar,\n    UpdateStateVar,\n    MultipleStateVars,\n    StateObject,\n    StateFromFn,\n    CounterFnSetState,\n} from '../components/examples/useState'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"usestate\"}}>{`useState🦄`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记：`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useState`}</MDXTag>{`允许您在组件函数中，使用本地状态(state)。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`查看`}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#usestate\"}}>{`文档`}</MDXTag>{`。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"声明状态变量\"}}>{`声明状态变量`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`声明状态变量简单，只要调用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`时，带有些初始状态值。`}</MDXTag>\n<Editor code={DeclareStateVar} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"更新状态变量\"}}>{`更新状态变量`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`更新状态变量简单，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`函数返回了，更新函数`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`updaterFn`}</MDXTag>{`(如下)。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const [stateValue, updaterFn] = useState(initialStateValue)\n`}</MDXTag></MDXTag>\n<Editor code={UpdateStateVar} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"多个状态变量\"}}>{`多个状态变量`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`可以在组件函数中，使用和更新多个状态变量，如下所示：`}</MDXTag>\n<Editor code={MultipleStateVars} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"使用对象状态变量\"}}>{`使用对象状态变量`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`除字符串和数字，您还可以使用对象(Object)类型，作为传递给`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`的初始值。`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`注意：你必须将整个对象，传递给`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`的更新函数，因为（存储的）对象是会被替换， `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`不会`}</MDXTag>{` 合并。`}</MDXTag>\n</MDXTag>\n<Editor code={StateObject} />\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`// 🐢 setState (Object 合并) vs useState (Object 替换)\n// 假设，初始化状态是 {name: \"Ohans\"}\n\nsetState({ age: 'unknown' })\n// 新状态 (Object) 会是\n// {name: \"Ohans\", age: \"unknown\"}\n\nuseStateUpdater({ age: 'unknown' })\n// 新状态 (Object) 会是\n// {age: \"unknown\"} - 初始化状态被替换\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"从函数初始化状态\"}}>{`从函数初始化状态`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`除了，传递初始状态值，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{`也可以通过函数，进行初始化，如下所示：`}</MDXTag>\n<Editor code={StateFromFn} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"函数化-setstate\"}}>{`函数化 setState`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`从调用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useState`}</MDXTag>{`返回的更新函数`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`updateValue`}</MDXTag>{`，也可以采用旧派'setState'，相同的函数化定义。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const [value, updateValue] = useState(0)\n// 两种形式，都可行 👇\n\nupdateValue(1)\nupdateValue(previousValue => previousValue + 1)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`当状态的更新，取决于某个先前的状态值时，这是理想的形式。`}</MDXTag>\n<Editor code={CounterFnSetState} />\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}