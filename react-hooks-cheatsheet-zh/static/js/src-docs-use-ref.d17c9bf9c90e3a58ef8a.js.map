{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useRef.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useRef.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","AccessDOM","HoldStringVal","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-ref.6c54a04c.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","import React from \"react\";\n\nconst AccessDOM = `() => {\n  const textAreaEl = useRef(null);\n  const handleBtnClick = () => {\n    textAreaEl.current.value =\n      \"The is the story of your life. You are an human being, and you're on a website about React Hooks\";\n    textAreaEl.current.focus();\n  };\n  return (\n    <section style={{ textAlign: \"center\" }}>\n      <div>\n        <button onClick={handleBtnClick}>Focus and Populate Text Field</button>\n      </div>\n      <label\n        htmlFor=\"story\"\n        style={{\n          display: \"block\",\n          background: \"olive\",\n          margin: \"1em\",\n          padding: \"1em\"\n        }}\n      >\n        The input box below will be focused and populated with some text\n        (imperatively) upon clicking the button above.\n      </label>\n      <textarea ref={textAreaEl} id=\"story\" rows=\"5\" cols=\"33\" />\n    </section>\n  );\n};`;\n\n\nconst HoldStringVal = `() => {\n    const textAreaEl = useRef(null);\n    const stringVal = useRef(\"This is a string saved via the ref object --- \")\n    const handleBtnClick = () => {\n      textAreaEl.current.value =\n      stringVal.current + \"The is the story of your life. You are an human being, and you're on a website about React Hooks\";\n      textAreaEl.current.focus();\n    };\n    return (\n      <section style={{ textAlign: \"center\" }}>\n        <div>\n          <button onClick={handleBtnClick}>Focus and Populate Text Field</button>\n        </div>\n        <label\n          htmlFor=\"story\"\n          style={{\n            display: \"block\",\n            background: \"olive\",\n            margin: \"1em\",\n            padding: \"1em\"\n          }}\n        >\n          Prepare to see text from the ref object here. Click button above.\n        </label>\n        <textarea ref={textAreaEl} id=\"story\" rows=\"5\" cols=\"33\" />\n      </section>\n    );\n  };`;\nexport { AccessDOM, HoldStringVal };\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport { AccessDOM, HoldStringVal } from '../components/examples/useRef'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"useref-\"}}>{`useRef 🌂`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`返回一个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`ref`}</MDXTag>{`对象。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`值可以从访问对象的`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.current`}</MDXTag>{`属性中访问。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`.current`}</MDXTag>{`属性可以初始化，为初始值，例如`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useRef(initialValue)`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`该对象在组件的整个生命周期内，保持不变。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#useref\"}}>{`查看文档`}</MDXTag>{`。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"访问-dom\"}}>{`访问 DOM`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Editor code={AccessDOM} />`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"像变量一样的实例（通用容器）\"}}>{`像变量一样的实例（通用容器）`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`除了，持有 DOM refs 之外，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ref`}</MDXTag>{`对象可以持有任何值。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Editor code={HoldStringVal} />`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`您可以更整洁地达到同一效果，存储从一个`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setInterval`}</MDXTag>{`，返回的值。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function TimerWithRefID() {\n    const setIntervalRef = useRef()\n\n    useEffect(() => {\n        const intervalID = setInterval(() => {\n            // 每 100ms 完成一些东西\n        }, 100)\n\n        // 这就是， interval ID 被保存在 ref 对象的位置。\n        setIntervalRef.current = intervalID\n        return () => {\n            clearInterval(setIntervalRef.current)\n        }\n    })\n}\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}