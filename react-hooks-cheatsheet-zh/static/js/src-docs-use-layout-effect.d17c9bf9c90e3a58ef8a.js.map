{"version":3,"sources":["/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/utils/colors.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/Editor.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/components/examples/useLayoutEffect.js","/Users/lizhenyong/Desktop/t翻译项目/translate-本地翻译/react/react-hooks-cheatsheet-zh/source/src/docs/useLayoutEffect.mdx"],"names":["red","blue","polished","lightGrey","StyledProvider","styled","div","_templateObject","LiveWrapper","_templateObject2","column","css","_templateObject3","StyledEditor","_templateObject4","props","autoEditorHeight","StyledPreview","_templateObject5","StyledError","LiveError","_templateObject6","defaultScope","useState","useEffect","useLayoutEffect","useMemo","useReducer","useRef","useCallback","useContext","memo","Editor","_ref","noInline","code","react_default","a","createElement","react_live_es","scope","ArrayDep","MDXContent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","layout","_this$props","components","objectWithoutProperties","dist","name","id","parentName","href","className","React","Component","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-use-layout-effect.472ca576.js","sourcesContent":["import * as polished from 'polished'\n\nexport const background = '#282a36'\nexport const foreground = '#f8f8f2'\nexport const red = '#ff5555'\n\nexport const blue = polished.lighten(0.1, '#6272a4')\nexport const lightGrey = polished.darken(0.05, '#282a36')\n","import React, {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n  memo\n} from 'react'\nimport styled, { css } from 'styled-components'\nimport * as polished from 'polished'\nimport { foreground, red, lightGrey } from '../utils/colors'\n\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live'\n\nconst StyledProvider = styled.div`\n  border-radius: ${polished.rem(3)};\n  box-shadow: 1px 1px 20px rgba(20, 20, 20, 0.27);\n  overflow: hidden;\n  margin-bottom: ${polished.rem(100)};\n`\n\nconst LiveWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: stretch;\n  align-items: stretch;\n  @media (max-width: 600px) {\n    flex-direction: column;\n  }\n`\n\nconst column = css`\n  flex-basis: 50%;\n  width: 50%;\n  max-width: 50%;\n  @media (max-width: 600px) {\n    flex-basis: auto;\n    width: 100%;\n    max-width: 100%;\n  }\n`\n\nconst StyledEditor = styled.div`\n  background: ${lightGrey};\n  font-family: 'Source Code Pro', monospace;\n  font-size: ${polished.rem(14)};\n  height: ${props => (props.autoEditorHeight ? 'auto' : polished.rem(350))};\n  max-height: auto;\n  overflow: auto;\n  ${column};\n  * > textarea:focus {\n    outline: none;\n  }\n`\n\nconst StyledPreview = styled.div`\n  position: relative;\n  padding: 0.5rem;\n  background: white;\n  color: black;\n  height: auto;\n  overflow: hidden;\n  ${column};\n`\n\nconst StyledError = styled(LiveError)`\n  display: block;\n  padding: ${polished.rem(8)};\n  background: ${red};\n  color: ${foreground};\n  white-space: pre-wrap;\n  text-align: left;\n  font-size: 0.9em;\n  font-family: 'Source Code Pro', monospace;\n`\n\nconst defaultScope = {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useCallback,\n  useContext,\n  memo\n}\n\nconst Editor = ({ noInline, code, autoEditorHeight }) => (\n  <StyledProvider>\n    <LiveProvider code={code} scope={defaultScope} noInline={noInline}>\n      <LiveWrapper>\n        <StyledEditor autoEditorHeight={autoEditorHeight}>\n          <LiveEditor />\n        </StyledEditor>\n        <StyledPreview>\n          <LivePreview />\n        </StyledPreview>\n      </LiveWrapper>\n      <StyledError />\n    </LiveProvider>\n  </StyledProvider>\n)\n\nexport default Editor\n","const ArrayDep = `() => {\n    const [randomNumber, setRandomNumber] = useState(0)\n    const [effectLogs, setEffectLogs] = useState([])\n  \n    useLayoutEffect(\n      () => {\n        setEffectLogs(prevEffectLogs => [...prevEffectLogs, 'effect fn has been invoked'])\n      },\n      [randomNumber]\n    )\n  \n    return (\n      <div>\n        <h1>{randomNumber}</h1>\n        <button\n          onClick={() => {\n            setRandomNumber(Math.random())\n          }}\n        >\n          Generate random number!\n        </button>\n        <div>\n          {effectLogs.map((effect, index) => (\n            <div key={index}>{'🍔'.repeat(index) + effect}</div>\n          ))}\n        </div>\n      </div>\n    )\n  }`\n\nexport { ArrayDep }\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Editor from '../components/Editor'\nimport { ArrayDep } from '../components/examples/useLayoutEffect'\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"uselayouteffect\"}}>{`useLayoutEffect`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`笔记：`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useLayoutEffect`}</MDXTag>{`的函数签名，与`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useEffect`}</MDXTag>{`相当接近。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useLayoutEffect`}</MDXTag>{`和`}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`useEffect`}</MDXTag>{`两者的区别，请接着往下看。`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`查看`}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://zh-hans.reactjs.org/docs/hooks-reference.html#uselayouteffect\"}}>{`文档`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`useLayoutEffect(() => {\n    //do something\n}, [arrayDep])\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"与-useeffect-相似的用法\"}}>{`与 useEffect 相似的用法`}</MDXTag>\n<Editor code={ArrayDep} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"uselayouteffect-vs-useeffect\"}}>{`useLayoutEffect vs useEffect`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`传递给`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`的函数，会在浏览器布局和绘制后，才会起火。\n即在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`render`}</MDXTag>{` 已经提交到页面之后。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`对于大多数，不应阻止浏览器更新页面的副作用来说，这是可以的。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`有些情况下，你可能不想用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useEffect`}</MDXTag>{`提供的行为。例如，如果需要对 网页 DOM 进行视觉更改的副作用。为了防止用户，看到更改的闪烁，可以使用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useLayoutEffect`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`传递给`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`useLayoutEffect`}</MDXTag>{`的函数，将在浏览器更新屏幕之前运行。`}</MDXTag>\n</MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "],"sourceRoot":""}